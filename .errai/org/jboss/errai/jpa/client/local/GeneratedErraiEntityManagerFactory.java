package org.jboss.errai.jpa.client.local;

import com.cloderia.helion.client.shared.model.Accountingperiod;
import com.cloderia.helion.client.shared.model.Accountingtransaction;
import com.cloderia.helion.client.shared.model.Accountingtransactiondetail;
import com.cloderia.helion.client.shared.model.Accountingtransactiontype;
import com.cloderia.helion.client.shared.model.Agreement;
import com.cloderia.helion.client.shared.model.Agreementitem;
import com.cloderia.helion.client.shared.model.Agreementitemtype;
import com.cloderia.helion.client.shared.model.Agreementrole;
import com.cloderia.helion.client.shared.model.Agreementroletype;
import com.cloderia.helion.client.shared.model.Agreementterm;
import com.cloderia.helion.client.shared.model.Agreementtype;
import com.cloderia.helion.client.shared.model.Billingaccount;
import com.cloderia.helion.client.shared.model.Budget;
import com.cloderia.helion.client.shared.model.Budgetitem;
import com.cloderia.helion.client.shared.model.Budgetitemtype;
import com.cloderia.helion.client.shared.model.Budgetstatus;
import com.cloderia.helion.client.shared.model.Budgetstatustype;
import com.cloderia.helion.client.shared.model.Budgettype;
import com.cloderia.helion.client.shared.model.Contactmechanism;
import com.cloderia.helion.client.shared.model.Contactmechanismpurposetype;
import com.cloderia.helion.client.shared.model.Contactmechanismtype;
import com.cloderia.helion.client.shared.model.Container;
import com.cloderia.helion.client.shared.model.Containertype;
import com.cloderia.helion.client.shared.model.Depreciationmethod;
import com.cloderia.helion.client.shared.model.Document;
import com.cloderia.helion.client.shared.model.Documenttype;
import com.cloderia.helion.client.shared.model.Facility;
import com.cloderia.helion.client.shared.model.Facilitytype;
import com.cloderia.helion.client.shared.model.Financialaccount;
import com.cloderia.helion.client.shared.model.Financialaccountrole;
import com.cloderia.helion.client.shared.model.Financialaccountroletype;
import com.cloderia.helion.client.shared.model.Financialaccounttransaction;
import com.cloderia.helion.client.shared.model.Financialaccounttransactiontype;
import com.cloderia.helion.client.shared.model.Financialaccounttype;
import com.cloderia.helion.client.shared.model.Fixedasset;
import com.cloderia.helion.client.shared.model.Fixedassetdepreciationmethod;
import com.cloderia.helion.client.shared.model.Fixedassettype;
import com.cloderia.helion.client.shared.model.Generalledgeraccount;
import com.cloderia.helion.client.shared.model.Generalledgeraccounttype;
import com.cloderia.helion.client.shared.model.Geoboundry;
import com.cloderia.helion.client.shared.model.Geoboundrytype;
import com.cloderia.helion.client.shared.model.Glbudgetxref;
import com.cloderia.helion.client.shared.model.Inventoryitem;
import com.cloderia.helion.client.shared.model.Inventoryitemstatus;
import com.cloderia.helion.client.shared.model.Inventoryitemtype;
import com.cloderia.helion.client.shared.model.Invoice;
import com.cloderia.helion.client.shared.model.Invoiceitem;
import com.cloderia.helion.client.shared.model.Invoiceitemtype;
import com.cloderia.helion.client.shared.model.Invoiceroletype;
import com.cloderia.helion.client.shared.model.Invoicestatus;
import com.cloderia.helion.client.shared.model.Invoicestatustype;
import com.cloderia.helion.client.shared.model.Invoiceterm;
import com.cloderia.helion.client.shared.model.Lot;
import com.cloderia.helion.client.shared.model.Organization;
import com.cloderia.helion.client.shared.model.Organizationgeneralledgeraccount;
import com.cloderia.helion.client.shared.model.Organizationglaccountbalance;
import com.cloderia.helion.client.shared.model.Party;
import com.cloderia.helion.client.shared.model.Partycategory;
import com.cloderia.helion.client.shared.model.Partyrelationship;
import com.cloderia.helion.client.shared.model.Partyrelationshipstatus;
import com.cloderia.helion.client.shared.model.Partyrelationshiptype;
import com.cloderia.helion.client.shared.model.Partyrole;
import com.cloderia.helion.client.shared.model.Partyroletype;
import com.cloderia.helion.client.shared.model.Partytype;
import com.cloderia.helion.client.shared.model.Payment;
import com.cloderia.helion.client.shared.model.Paymentapplication;
import com.cloderia.helion.client.shared.model.Paymentmethodtype;
import com.cloderia.helion.client.shared.model.Paymenttype;
import com.cloderia.helion.client.shared.model.Periodtype;
import com.cloderia.helion.client.shared.model.Person;
import com.cloderia.helion.client.shared.model.Preferencetype;
import com.cloderia.helion.client.shared.model.Product;
import com.cloderia.helion.client.shared.model.Productcategory;
import com.cloderia.helion.client.shared.model.Productcategorytype;
import com.cloderia.helion.client.shared.model.Productfeature;
import com.cloderia.helion.client.shared.model.Productfeaturecategory;
import com.cloderia.helion.client.shared.model.Productfeaturetype;
import com.cloderia.helion.client.shared.model.Producttype;
import com.cloderia.helion.client.shared.model.Ratingtype;
import com.cloderia.helion.client.shared.model.Standardtimeperiod;
import com.cloderia.helion.client.shared.model.Supplierproduct;
import com.cloderia.helion.client.shared.model.Systemuser;
import com.cloderia.helion.client.shared.model.Terminationreason;
import com.cloderia.helion.client.shared.model.Terminationtype;
import com.cloderia.helion.client.shared.model.Termtype;
import com.cloderia.helion.client.shared.model.Universe;
import com.cloderia.helion.client.shared.model.Uom;
import com.cloderia.helion.client.shared.model.Uomconversion;
import com.google.gwt.json.client.JSONObject;
import java.math.BigDecimal;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.persistence.CascadeType;
import javax.persistence.TypedQuery;
import javax.persistence.metamodel.Attribute.PersistentAttributeType;
import javax.persistence.metamodel.Bindable.BindableType;
import javax.persistence.metamodel.ManagedType;
import javax.persistence.metamodel.Type;
import javax.persistence.metamodel.Type.PersistenceType;
import org.jboss.errai.jpa.client.local.backend.Comparisons;
import org.jboss.errai.jpa.client.local.backend.WebStorageBackend;

public class GeneratedErraiEntityManagerFactory implements ErraiEntityManagerFactory {
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budget;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreement;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Universe;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Inventoryitem;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Accountingperiod;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Productcategory;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Productfeature;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementitemtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budgetitem;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoiceroletype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Uomconversion;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budgetstatustype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Preferencetype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Documenttype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Facilitytype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccountrole;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budgettype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Uom;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Containertype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Lot;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Billingaccount;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partyroletype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partycategory;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoiceitem;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Product;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccounttype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Person;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Container;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Depreciationmethod;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partyrelationship;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Systemuser;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Facility;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Glbudgetxref;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budgetstatus;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partyrole;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementterm;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementrole;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Supplierproduct;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccount;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Paymenttype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoicestatus;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Party;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoice;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Fixedasset;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoiceterm;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementroletype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Geoboundry;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Organization;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Producttype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Terminationtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Paymentapplication;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoicestatustype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Budgetitemtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Ratingtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Accountingtransaction;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Productfeaturetype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Periodtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Productcategorytype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Agreementitem;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partytype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Contactmechanism;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Document;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Termtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Payment;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Geoboundrytype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Terminationreason;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Fixedassettype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
  private ErraiEntityType et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
  public ErraiEntityManager createEntityManager() {
    return new ErraiEntityManager(createMetamodel(), createNamedQueries(), WebStorageBackend.FACTORY);
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budget() {
    final ErraiEntityType entityType = new ErraiEntityType<Budget>("Budget", Budget.class) {
      public Budget newInstance() {
        return new Budget();
      }

      public void deliverPrePersist(Budget targetEntity) {

      }

      public void deliverPostPersist(Budget targetEntity) {

      }

      public void deliverPreUpdate(Budget targetEntity) {

      }

      public void deliverPostUpdate(Budget targetEntity) {

      }

      public void deliverPreRemove(Budget targetEntity) {

      }

      public void deliverPostRemove(Budget targetEntity) {

      }

      public void deliverPostLoad(Budget targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getPeriod();
      }
      public Class getBindableJavaType() {
        return Standardtimeperiod.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Standardtimeperiod.class;
      }
      public String getName() {
        return "period";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Standardtimeperiod.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setPeriod((Standardtimeperiod) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budget) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budget;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budget) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreement() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreement>("Agreement", Agreement.class) {
      public Agreement newInstance() {
        return new Agreement();
      }

      public void deliverPrePersist(Agreement targetEntity) {

      }

      public void deliverPostPersist(Agreement targetEntity) {

      }

      public void deliverPreUpdate(Agreement targetEntity) {

      }

      public void deliverPostUpdate(Agreement targetEntity) {

      }

      public void deliverPreRemove(Agreement targetEntity) {

      }

      public void deliverPostRemove(Agreement targetEntity) {

      }

      public void deliverPostLoad(Agreement targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getPartyRel();
      }
      public Class getBindableJavaType() {
        return Partyrelationship.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Partyrelationship.class;
      }
      public String getName() {
        return "partyRel";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrelationship.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setPartyRel((Partyrelationship) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getAgreementTy();
      }
      public Class getBindableJavaType() {
        return Agreementtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Agreementtype.class;
      }
      public String getName() {
        return "agreementTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreementtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setAgreementTy((Agreementtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getText();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "text";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setText((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getAgreementDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "agreementDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setAgreementDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreement) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreement;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreement) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Universe() {
    final ErraiEntityType entityType = new ErraiEntityType<Universe>("Universe", Universe.class) {
      public Universe newInstance() {
        return new Universe();
      }

      public void deliverPrePersist(Universe targetEntity) {

      }

      public void deliverPostPersist(Universe targetEntity) {

      }

      public void deliverPreUpdate(Universe targetEntity) {

      }

      public void deliverPostUpdate(Universe targetEntity) {

      }

      public void deliverPreRemove(Universe targetEntity) {

      }

      public void deliverPostRemove(Universe targetEntity) {

      }

      public void deliverPostLoad(Universe targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getBusinessNo();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "businessNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setBusinessNo((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getParentUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "parentUniverse";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setParentUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getUniverseTyCd();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "universeTyCd";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setUniverseTyCd((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Universe) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Universe;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Universe) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Inventoryitem() {
    final ErraiEntityType entityType = new ErraiEntityType<Inventoryitem>("Inventoryitem", Inventoryitem.class) {
      public Inventoryitem newInstance() {
        return new Inventoryitem();
      }

      public void deliverPrePersist(Inventoryitem targetEntity) {

      }

      public void deliverPostPersist(Inventoryitem targetEntity) {

      }

      public void deliverPreUpdate(Inventoryitem targetEntity) {

      }

      public void deliverPostUpdate(Inventoryitem targetEntity) {

      }

      public void deliverPreRemove(Inventoryitem targetEntity) {

      }

      public void deliverPostRemove(Inventoryitem targetEntity) {

      }

      public void deliverPostLoad(Inventoryitem targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getStatus();
      }
      public Class getBindableJavaType() {
        return Inventoryitemstatus.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Inventoryitemstatus.class;
      }
      public String getName() {
        return "status";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Inventoryitemstatus.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setStatus((Inventoryitemstatus) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getItemTy();
      }
      public Class getBindableJavaType() {
        return Inventoryitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Inventoryitemtype.class;
      }
      public String getName() {
        return "itemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Inventoryitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setItemTy((Inventoryitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getQuantityOnHand();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "quantityOnHand";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setQuantityOnHand((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getContainer();
      }
      public Class getBindableJavaType() {
        return Container.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Container.class;
      }
      public String getName() {
        return "container";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Container.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setContainer((Container) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getProd();
      }
      public Class getBindableJavaType() {
        return Product.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Product.class;
      }
      public String getName() {
        return "prod";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Product.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setProd((Product) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getSerialNum();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "serialNum";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setSerialNum((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getFacility();
      }
      public Class getBindableJavaType() {
        return Facility.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Facility.class;
      }
      public String getName() {
        return "facility";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Facility.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setFacility((Facility) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getLot();
      }
      public Class getBindableJavaType() {
        return Lot.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Lot.class;
      }
      public String getName() {
        return "lot";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Lot.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setLot((Lot) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitem) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitem) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Accountingperiod() {
    final ErraiEntityType entityType = new ErraiEntityType<Accountingperiod>("Accountingperiod", Accountingperiod.class) {
      public Accountingperiod newInstance() {
        return new Accountingperiod();
      }

      public void deliverPrePersist(Accountingperiod targetEntity) {

      }

      public void deliverPostPersist(Accountingperiod targetEntity) {

      }

      public void deliverPreUpdate(Accountingperiod targetEntity) {

      }

      public void deliverPostUpdate(Accountingperiod targetEntity) {

      }

      public void deliverPreRemove(Accountingperiod targetEntity) {

      }

      public void deliverPostRemove(Accountingperiod targetEntity) {

      }

      public void deliverPostLoad(Accountingperiod targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getParentPeriodTy();
      }
      public Class getBindableJavaType() {
        return Accountingperiod.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Accountingperiod.class;
      }
      public String getName() {
        return "parentPeriodTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingperiod.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setParentPeriodTy((Accountingperiod) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getOrganization();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "organization";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setOrganization((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getPeriodTy();
      }
      public Class getBindableJavaType() {
        return Periodtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Periodtype.class;
      }
      public String getName() {
        return "periodTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Periodtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setPeriodTy((Periodtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingperiod) entityInstance).getPeriodNum();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingperiod;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "periodNum";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingperiod) entityInstance).setPeriodNum((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Productcategory() {
    final ErraiEntityType entityType = new ErraiEntityType<Productcategory>("Productcategory", Productcategory.class) {
      public Productcategory newInstance() {
        return new Productcategory();
      }

      public void deliverPrePersist(Productcategory targetEntity) {

      }

      public void deliverPostPersist(Productcategory targetEntity) {

      }

      public void deliverPreUpdate(Productcategory targetEntity) {

      }

      public void deliverPostUpdate(Productcategory targetEntity) {

      }

      public void deliverPreRemove(Productcategory targetEntity) {

      }

      public void deliverPostRemove(Productcategory targetEntity) {

      }

      public void deliverPostLoad(Productcategory targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getProdCatTy();
      }
      public Class getBindableJavaType() {
        return Productcategorytype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Productcategorytype.class;
      }
      public String getName() {
        return "prodCatTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Productcategorytype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setProdCatTy((Productcategorytype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategory) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategory;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategory) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Productfeature() {
    final ErraiEntityType entityType = new ErraiEntityType<Productfeature>("Productfeature", Productfeature.class) {
      public Productfeature newInstance() {
        return new Productfeature();
      }

      public void deliverPrePersist(Productfeature targetEntity) {

      }

      public void deliverPostPersist(Productfeature targetEntity) {

      }

      public void deliverPreUpdate(Productfeature targetEntity) {

      }

      public void deliverPostUpdate(Productfeature targetEntity) {

      }

      public void deliverPreRemove(Productfeature targetEntity) {

      }

      public void deliverPostRemove(Productfeature targetEntity) {

      }

      public void deliverPostLoad(Productfeature targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getProdFeatCat();
      }
      public Class getBindableJavaType() {
        return Productfeaturecategory.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Productfeaturecategory.class;
      }
      public String getName() {
        return "prodFeatCat";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Productfeaturecategory.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setProdFeatCat((Productfeaturecategory) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getProdFeatTy();
      }
      public Class getBindableJavaType() {
        return Productfeaturetype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Productfeaturetype.class;
      }
      public String getName() {
        return "prodFeatTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Productfeaturetype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setProdFeatTy((Productfeaturetype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeature) entityInstance).getUom();
      }
      public Class getBindableJavaType() {
        return Uom.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeature;
      }
      public Class getJavaType() {
        return Uom.class;
      }
      public String getName() {
        return "uom";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Uom.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeature) entityInstance).setUom((Uom) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementitemtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementitemtype>("Agreementitemtype", Agreementitemtype.class) {
      public Agreementitemtype newInstance() {
        return new Agreementitemtype();
      }

      public void deliverPrePersist(Agreementitemtype targetEntity) {

      }

      public void deliverPostPersist(Agreementitemtype targetEntity) {

      }

      public void deliverPreUpdate(Agreementitemtype targetEntity) {

      }

      public void deliverPostUpdate(Agreementitemtype targetEntity) {

      }

      public void deliverPreRemove(Agreementitemtype targetEntity) {

      }

      public void deliverPostRemove(Agreementitemtype targetEntity) {

      }

      public void deliverPostLoad(Agreementitemtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitemtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitemtype) entityInstance).setRowTs((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budgetitem() {
    final ErraiEntityType entityType = new ErraiEntityType<Budgetitem>("Budgetitem", Budgetitem.class) {
      public Budgetitem newInstance() {
        return new Budgetitem();
      }

      public void deliverPrePersist(Budgetitem targetEntity) {

      }

      public void deliverPostPersist(Budgetitem targetEntity) {

      }

      public void deliverPreUpdate(Budgetitem targetEntity) {

      }

      public void deliverPostUpdate(Budgetitem targetEntity) {

      }

      public void deliverPreRemove(Budgetitem targetEntity) {

      }

      public void deliverPostRemove(Budgetitem targetEntity) {

      }

      public void deliverPostLoad(Budgetitem targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getAmount();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setAmount((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getItemTy();
      }
      public Class getBindableJavaType() {
        return Budgetitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Budgetitemtype.class;
      }
      public String getName() {
        return "itemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budgetitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setItemTy((Budgetitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getPurpose();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "purpose";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setPurpose((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getBudget();
      }
      public Class getBindableJavaType() {
        return Budget.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Budget.class;
      }
      public String getName() {
        return "budget";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budget.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setBudget((Budget) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getJustification();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "justification";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setJustification((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetitem) entityInstance).getParentItem();
      }
      public Class getBindableJavaType() {
        return Budgetitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitem;
      }
      public Class getJavaType() {
        return Budgetitem.class;
      }
      public String getName() {
        return "parentItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budgetitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitem) entityInstance).setParentItem((Budgetitem) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoiceroletype() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoiceroletype>("Invoiceroletype", Invoiceroletype.class) {
      public Invoiceroletype newInstance() {
        return new Invoiceroletype();
      }

      public void deliverPrePersist(Invoiceroletype targetEntity) {

      }

      public void deliverPostPersist(Invoiceroletype targetEntity) {

      }

      public void deliverPreUpdate(Invoiceroletype targetEntity) {

      }

      public void deliverPostUpdate(Invoiceroletype targetEntity) {

      }

      public void deliverPreRemove(Invoiceroletype targetEntity) {

      }

      public void deliverPostRemove(Invoiceroletype targetEntity) {

      }

      public void deliverPostLoad(Invoiceroletype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceroletype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceroletype) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Uomconversion() {
    final ErraiEntityType entityType = new ErraiEntityType<Uomconversion>("Uomconversion", Uomconversion.class) {
      public Uomconversion newInstance() {
        return new Uomconversion();
      }

      public void deliverPrePersist(Uomconversion targetEntity) {

      }

      public void deliverPostPersist(Uomconversion targetEntity) {

      }

      public void deliverPreUpdate(Uomconversion targetEntity) {

      }

      public void deliverPostUpdate(Uomconversion targetEntity) {

      }

      public void deliverPreRemove(Uomconversion targetEntity) {

      }

      public void deliverPostRemove(Uomconversion targetEntity) {

      }

      public void deliverPostLoad(Uomconversion targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getToUom();
      }
      public Class getBindableJavaType() {
        return Uom.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Uom.class;
      }
      public String getName() {
        return "toUom";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Uom.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setToUom((Uom) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getFromUom();
      }
      public Class getBindableJavaType() {
        return Uom.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Uom.class;
      }
      public String getName() {
        return "fromUom";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Uom.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setFromUom((Uom) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getConversionFactor();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "conversionFactor";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setConversionFactor((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uomconversion) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uomconversion;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uomconversion) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Organizationglaccountbalance() {
    final ErraiEntityType entityType = new ErraiEntityType<Organizationglaccountbalance>("Organizationglaccountbalance", Organizationglaccountbalance.class) {
      public Organizationglaccountbalance newInstance() {
        return new Organizationglaccountbalance();
      }

      public void deliverPrePersist(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPostPersist(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPreUpdate(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPostUpdate(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPreRemove(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPostRemove(Organizationglaccountbalance targetEntity) {

      }

      public void deliverPostLoad(Organizationglaccountbalance targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getAmount();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setAmount((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getGlAccount();
      }
      public Class getBindableJavaType() {
        return Organizationgeneralledgeraccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Organizationgeneralledgeraccount.class;
      }
      public String getName() {
        return "glAccount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Organizationgeneralledgeraccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setGlAccount((Organizationgeneralledgeraccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationglaccountbalance) entityInstance).getAccountingPeriod();
      }
      public Class getBindableJavaType() {
        return Accountingperiod.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance;
      }
      public Class getJavaType() {
        return Accountingperiod.class;
      }
      public String getName() {
        return "accountingPeriod";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingperiod.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationglaccountbalance) entityInstance).setAccountingPeriod((Accountingperiod) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budgetstatustype() {
    final ErraiEntityType entityType = new ErraiEntityType<Budgetstatustype>("Budgetstatustype", Budgetstatustype.class) {
      public Budgetstatustype newInstance() {
        return new Budgetstatustype();
      }

      public void deliverPrePersist(Budgetstatustype targetEntity) {

      }

      public void deliverPostPersist(Budgetstatustype targetEntity) {

      }

      public void deliverPreUpdate(Budgetstatustype targetEntity) {

      }

      public void deliverPostUpdate(Budgetstatustype targetEntity) {

      }

      public void deliverPreRemove(Budgetstatustype targetEntity) {

      }

      public void deliverPostRemove(Budgetstatustype targetEntity) {

      }

      public void deliverPostLoad(Budgetstatustype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatustype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatustype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatustype) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Preferencetype() {
    final ErraiEntityType entityType = new ErraiEntityType<Preferencetype>("Preferencetype", Preferencetype.class) {
      public Preferencetype newInstance() {
        return new Preferencetype();
      }

      public void deliverPrePersist(Preferencetype targetEntity) {

      }

      public void deliverPostPersist(Preferencetype targetEntity) {

      }

      public void deliverPreUpdate(Preferencetype targetEntity) {

      }

      public void deliverPostUpdate(Preferencetype targetEntity) {

      }

      public void deliverPreRemove(Preferencetype targetEntity) {

      }

      public void deliverPostRemove(Preferencetype targetEntity) {

      }

      public void deliverPostLoad(Preferencetype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Preferencetype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Preferencetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Preferencetype) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Documenttype() {
    final ErraiEntityType entityType = new ErraiEntityType<Documenttype>("Documenttype", Documenttype.class) {
      public Documenttype newInstance() {
        return new Documenttype();
      }

      public void deliverPrePersist(Documenttype targetEntity) {

      }

      public void deliverPostPersist(Documenttype targetEntity) {

      }

      public void deliverPreUpdate(Documenttype targetEntity) {

      }

      public void deliverPostUpdate(Documenttype targetEntity) {

      }

      public void deliverPreRemove(Documenttype targetEntity) {

      }

      public void deliverPostRemove(Documenttype targetEntity) {

      }

      public void deliverPostLoad(Documenttype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getParentTy();
      }
      public Class getBindableJavaType() {
        return Documenttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Documenttype.class;
      }
      public String getName() {
        return "parentTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Documenttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setParentTy((Documenttype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Documenttype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Documenttype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Documenttype) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Inventoryitemtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Inventoryitemtype>("Inventoryitemtype", Inventoryitemtype.class) {
      public Inventoryitemtype newInstance() {
        return new Inventoryitemtype();
      }

      public void deliverPrePersist(Inventoryitemtype targetEntity) {

      }

      public void deliverPostPersist(Inventoryitemtype targetEntity) {

      }

      public void deliverPreUpdate(Inventoryitemtype targetEntity) {

      }

      public void deliverPostUpdate(Inventoryitemtype targetEntity) {

      }

      public void deliverPreRemove(Inventoryitemtype targetEntity) {

      }

      public void deliverPostRemove(Inventoryitemtype targetEntity) {

      }

      public void deliverPostLoad(Inventoryitemtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Facilitytype() {
    final ErraiEntityType entityType = new ErraiEntityType<Facilitytype>("Facilitytype", Facilitytype.class) {
      public Facilitytype newInstance() {
        return new Facilitytype();
      }

      public void deliverPrePersist(Facilitytype targetEntity) {

      }

      public void deliverPostPersist(Facilitytype targetEntity) {

      }

      public void deliverPreUpdate(Facilitytype targetEntity) {

      }

      public void deliverPostUpdate(Facilitytype targetEntity) {

      }

      public void deliverPreRemove(Facilitytype targetEntity) {

      }

      public void deliverPostRemove(Facilitytype targetEntity) {

      }

      public void deliverPostLoad(Facilitytype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facilitytype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facilitytype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facilitytype) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccountrole() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccountrole>("Financialaccountrole", Financialaccountrole.class) {
      public Financialaccountrole newInstance() {
        return new Financialaccountrole();
      }

      public void deliverPrePersist(Financialaccountrole targetEntity) {

      }

      public void deliverPostPersist(Financialaccountrole targetEntity) {

      }

      public void deliverPreUpdate(Financialaccountrole targetEntity) {

      }

      public void deliverPostUpdate(Financialaccountrole targetEntity) {

      }

      public void deliverPreRemove(Financialaccountrole targetEntity) {

      }

      public void deliverPostRemove(Financialaccountrole targetEntity) {

      }

      public void deliverPostLoad(Financialaccountrole targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getRoleTy();
      }
      public Class getBindableJavaType() {
        return Financialaccountroletype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Financialaccountroletype.class;
      }
      public String getName() {
        return "roleTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccountroletype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setRoleTy((Financialaccountroletype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getFinAcct();
      }
      public Class getBindableJavaType() {
        return Financialaccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Financialaccount.class;
      }
      public String getName() {
        return "finAcct";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setFinAcct((Financialaccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountrole) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountrole;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountrole) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budgettype() {
    final ErraiEntityType entityType = new ErraiEntityType<Budgettype>("Budgettype", Budgettype.class) {
      public Budgettype newInstance() {
        return new Budgettype();
      }

      public void deliverPrePersist(Budgettype targetEntity) {

      }

      public void deliverPostPersist(Budgettype targetEntity) {

      }

      public void deliverPreUpdate(Budgettype targetEntity) {

      }

      public void deliverPostUpdate(Budgettype targetEntity) {

      }

      public void deliverPreRemove(Budgettype targetEntity) {

      }

      public void deliverPostRemove(Budgettype targetEntity) {

      }

      public void deliverPostLoad(Budgettype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgettype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgettype) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Uom() {
    final ErraiEntityType entityType = new ErraiEntityType<Uom>("Uom", Uom.class) {
      public Uom newInstance() {
        return new Uom();
      }

      public void deliverPrePersist(Uom targetEntity) {

      }

      public void deliverPostPersist(Uom targetEntity) {

      }

      public void deliverPreUpdate(Uom targetEntity) {

      }

      public void deliverPostUpdate(Uom targetEntity) {

      }

      public void deliverPreRemove(Uom targetEntity) {

      }

      public void deliverPostRemove(Uom targetEntity) {

      }

      public void deliverPostLoad(Uom targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Uom) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Uom;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Uom) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Containertype() {
    final ErraiEntityType entityType = new ErraiEntityType<Containertype>("Containertype", Containertype.class) {
      public Containertype newInstance() {
        return new Containertype();
      }

      public void deliverPrePersist(Containertype targetEntity) {

      }

      public void deliverPostPersist(Containertype targetEntity) {

      }

      public void deliverPreUpdate(Containertype targetEntity) {

      }

      public void deliverPostUpdate(Containertype targetEntity) {

      }

      public void deliverPreRemove(Containertype targetEntity) {

      }

      public void deliverPostRemove(Containertype targetEntity) {

      }

      public void deliverPostLoad(Containertype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Containertype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Containertype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Containertype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Lot() {
    final ErraiEntityType entityType = new ErraiEntityType<Lot>("Lot", Lot.class) {
      public Lot newInstance() {
        return new Lot();
      }

      public void deliverPrePersist(Lot targetEntity) {

      }

      public void deliverPostPersist(Lot targetEntity) {

      }

      public void deliverPreUpdate(Lot targetEntity) {

      }

      public void deliverPostUpdate(Lot targetEntity) {

      }

      public void deliverPreRemove(Lot targetEntity) {

      }

      public void deliverPostRemove(Lot targetEntity) {

      }

      public void deliverPostLoad(Lot targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getExpiryDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "expiryDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setExpiryDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getQuantity();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "quantity";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setQuantity((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Lot) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Lot;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Lot) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Billingaccount() {
    final ErraiEntityType entityType = new ErraiEntityType<Billingaccount>("Billingaccount", Billingaccount.class) {
      public Billingaccount newInstance() {
        return new Billingaccount();
      }

      public void deliverPrePersist(Billingaccount targetEntity) {

      }

      public void deliverPostPersist(Billingaccount targetEntity) {

      }

      public void deliverPreUpdate(Billingaccount targetEntity) {

      }

      public void deliverPostUpdate(Billingaccount targetEntity) {

      }

      public void deliverPreRemove(Billingaccount targetEntity) {

      }

      public void deliverPostRemove(Billingaccount targetEntity) {

      }

      public void deliverPostLoad(Billingaccount targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getToContMech();
      }
      public Class getBindableJavaType() {
        return Contactmechanism.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return Contactmechanism.class;
      }
      public String getName() {
        return "toContMech";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Contactmechanism.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setToContMech((Contactmechanism) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Billingaccount) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Billingaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Billingaccount) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partyroletype() {
    final ErraiEntityType entityType = new ErraiEntityType<Partyroletype>("Partyroletype", Partyroletype.class) {
      public Partyroletype newInstance() {
        return new Partyroletype();
      }

      public void deliverPrePersist(Partyroletype targetEntity) {

      }

      public void deliverPostPersist(Partyroletype targetEntity) {

      }

      public void deliverPreUpdate(Partyroletype targetEntity) {

      }

      public void deliverPostUpdate(Partyroletype targetEntity) {

      }

      public void deliverPreRemove(Partyroletype targetEntity) {

      }

      public void deliverPostRemove(Partyroletype targetEntity) {

      }

      public void deliverPostLoad(Partyroletype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getParentRoleTy();
      }
      public Class getBindableJavaType() {
        return Partyroletype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Partyroletype.class;
      }
      public String getName() {
        return "parentRoleTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyroletype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setParentRoleTy((Partyroletype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyroletype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyroletype) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partycategory() {
    final ErraiEntityType entityType = new ErraiEntityType<Partycategory>("Partycategory", Partycategory.class) {
      public Partycategory newInstance() {
        return new Partycategory();
      }

      public void deliverPrePersist(Partycategory targetEntity) {

      }

      public void deliverPostPersist(Partycategory targetEntity) {

      }

      public void deliverPreUpdate(Partycategory targetEntity) {

      }

      public void deliverPostUpdate(Partycategory targetEntity) {

      }

      public void deliverPreRemove(Partycategory targetEntity) {

      }

      public void deliverPostRemove(Partycategory targetEntity) {

      }

      public void deliverPostLoad(Partycategory targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partycategory) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partycategory;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partycategory) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoiceitem() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoiceitem>("Invoiceitem", Invoiceitem.class) {
      public Invoiceitem newInstance() {
        return new Invoiceitem();
      }

      public void deliverPrePersist(Invoiceitem targetEntity) {

      }

      public void deliverPostPersist(Invoiceitem targetEntity) {

      }

      public void deliverPreUpdate(Invoiceitem targetEntity) {

      }

      public void deliverPostUpdate(Invoiceitem targetEntity) {

      }

      public void deliverPreRemove(Invoiceitem targetEntity) {

      }

      public void deliverPostRemove(Invoiceitem targetEntity) {

      }

      public void deliverPostLoad(Invoiceitem targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getAdjByItem();
      }
      public Class getBindableJavaType() {
        return Invoiceitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Invoiceitem.class;
      }
      public String getName() {
        return "adjByItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setAdjByItem((Invoiceitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getInventoryItem();
      }
      public Class getBindableJavaType() {
        return Inventoryitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Inventoryitem.class;
      }
      public String getName() {
        return "inventoryItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Inventoryitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setInventoryItem((Inventoryitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getProdFeat();
      }
      public Class getBindableJavaType() {
        return Productfeature.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Productfeature.class;
      }
      public String getName() {
        return "prodFeat";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Productfeature.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setProdFeat((Productfeature) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getQuantity();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "quantity";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setQuantity((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getSoldWithItem();
      }
      public Class getBindableJavaType() {
        return Invoiceitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Invoiceitem.class;
      }
      public String getName() {
        return "soldWithItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setSoldWithItem((Invoiceitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getUnitPrice();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "unitPrice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setUnitPrice((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getProd();
      }
      public Class getBindableJavaType() {
        return Product.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Product.class;
      }
      public String getName() {
        return "prod";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Product.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setProd((Product) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getItemTy();
      }
      public Class getBindableJavaType() {
        return Invoiceitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Invoiceitemtype.class;
      }
      public String getName() {
        return "itemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setItemTy((Invoiceitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getItemDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "itemDescription";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setItemDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getTaxableFg();
      }
      public Class getBindableJavaType() {
        return Boolean.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Boolean.class;
      }
      public String getName() {
        return "taxableFg";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Boolean.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setTaxableFg((Boolean) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getInvoice();
      }
      public Class getBindableJavaType() {
        return Invoice.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Invoice.class;
      }
      public String getName() {
        return "invoice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoice.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setInvoice((Invoice) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getAmount();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setAmount((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitem) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitem) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementtype>("Agreementtype", Agreementtype.class) {
      public Agreementtype newInstance() {
        return new Agreementtype();
      }

      public void deliverPrePersist(Agreementtype targetEntity) {

      }

      public void deliverPostPersist(Agreementtype targetEntity) {

      }

      public void deliverPreUpdate(Agreementtype targetEntity) {

      }

      public void deliverPostUpdate(Agreementtype targetEntity) {

      }

      public void deliverPreRemove(Agreementtype targetEntity) {

      }

      public void deliverPostRemove(Agreementtype targetEntity) {

      }

      public void deliverPostLoad(Agreementtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Product() {
    final ErraiEntityType entityType = new ErraiEntityType<Product>("Product", Product.class) {
      public Product newInstance() {
        return new Product();
      }

      public void deliverPrePersist(Product targetEntity) {

      }

      public void deliverPostPersist(Product targetEntity) {

      }

      public void deliverPreUpdate(Product targetEntity) {

      }

      public void deliverPostUpdate(Product targetEntity) {

      }

      public void deliverPreRemove(Product targetEntity) {

      }

      public void deliverPostRemove(Product targetEntity) {

      }

      public void deliverPostLoad(Product targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getManufacturer();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "manufacturer";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setManufacturer((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getRemarks();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "remarks";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setRemarks((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getIntroductionDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "introductionDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setIntroductionDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getSupportDiscDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "supportDiscDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setSupportDiscDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getSalesDiscDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "salesDiscDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setSalesDiscDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getUom();
      }
      public Class getBindableJavaType() {
        return Uom.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Uom.class;
      }
      public String getName() {
        return "uom";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Uom.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setUom((Uom) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Product) entityInstance).getProdTy();
      }
      public Class getBindableJavaType() {
        return Producttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Product;
      }
      public Class getJavaType() {
        return Producttype.class;
      }
      public String getName() {
        return "prodTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Producttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Product) entityInstance).setProdTy((Producttype) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod() {
    final ErraiEntityType entityType = new ErraiEntityType<Fixedassetdepreciationmethod>("Fixedassetdepreciationmethod", Fixedassetdepreciationmethod.class) {
      public Fixedassetdepreciationmethod newInstance() {
        return new Fixedassetdepreciationmethod();
      }

      public void deliverPrePersist(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPostPersist(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPreUpdate(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPostUpdate(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPreRemove(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPostRemove(Fixedassetdepreciationmethod targetEntity) {

      }

      public void deliverPostLoad(Fixedassetdepreciationmethod targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getDepMethod();
      }
      public Class getBindableJavaType() {
        return Depreciationmethod.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Depreciationmethod.class;
      }
      public String getName() {
        return "depMethod";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Depreciationmethod.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setDepMethod((Depreciationmethod) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedassetdepreciationmethod) entityInstance).getFixedAsset();
      }
      public Class getBindableJavaType() {
        return Fixedasset.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod;
      }
      public Class getJavaType() {
        return Fixedasset.class;
      }
      public String getName() {
        return "fixedAsset";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Fixedasset.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassetdepreciationmethod) entityInstance).setFixedAsset((Fixedasset) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttype() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccounttype>("Financialaccounttype", Financialaccounttype.class) {
      public Financialaccounttype newInstance() {
        return new Financialaccounttype();
      }

      public void deliverPrePersist(Financialaccounttype targetEntity) {

      }

      public void deliverPostPersist(Financialaccounttype targetEntity) {

      }

      public void deliverPreUpdate(Financialaccounttype targetEntity) {

      }

      public void deliverPostUpdate(Financialaccounttype targetEntity) {

      }

      public void deliverPreRemove(Financialaccounttype targetEntity) {

      }

      public void deliverPostRemove(Financialaccounttype targetEntity) {

      }

      public void deliverPostLoad(Financialaccounttype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttype) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Person() {
    final ErraiEntityType entityType = new ErraiEntityType<Person>("Person", Person.class) {
      public Person newInstance() {
        return new Person();
      }

      public void deliverPrePersist(Person targetEntity) {

      }

      public void deliverPostPersist(Person targetEntity) {

      }

      public void deliverPreUpdate(Person targetEntity) {

      }

      public void deliverPostUpdate(Person targetEntity) {

      }

      public void deliverPreRemove(Person targetEntity) {

      }

      public void deliverPostRemove(Person targetEntity) {

      }

      public void deliverPostLoad(Person targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getPassportNo();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "passportNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setPassportNo((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getMiddleNm();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "middleNm";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setMiddleNm((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getGender();
      }
      public Class getBindableJavaType() {
        return Boolean.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Boolean.class;
      }
      public String getName() {
        return "gender";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Boolean.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setGender((Boolean) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getPassportExpDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "passportExpDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setPassportExpDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getFirstNm();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "firstNm";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setFirstNm((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getTaxPin();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "taxPin";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setTaxPin((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getLastNm();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastNm";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setLastNm((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getHeight();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "height";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setHeight((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getWeigth();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "weigth";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setWeigth((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Person) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Person;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Person) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Container() {
    final ErraiEntityType entityType = new ErraiEntityType<Container>("Container", Container.class) {
      public Container newInstance() {
        return new Container();
      }

      public void deliverPrePersist(Container targetEntity) {

      }

      public void deliverPostPersist(Container targetEntity) {

      }

      public void deliverPreUpdate(Container targetEntity) {

      }

      public void deliverPostUpdate(Container targetEntity) {

      }

      public void deliverPreRemove(Container targetEntity) {

      }

      public void deliverPostRemove(Container targetEntity) {

      }

      public void deliverPostLoad(Container targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getFacility();
      }
      public Class getBindableJavaType() {
        return Facility.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Facility.class;
      }
      public String getName() {
        return "facility";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Facility.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setFacility((Facility) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Container) entityInstance).getContainerTy();
      }
      public Class getBindableJavaType() {
        return Containertype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Container;
      }
      public Class getJavaType() {
        return Containertype.class;
      }
      public String getName() {
        return "containerTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Containertype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Container) entityInstance).setContainerTy((Containertype) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Depreciationmethod() {
    final ErraiEntityType entityType = new ErraiEntityType<Depreciationmethod>("Depreciationmethod", Depreciationmethod.class) {
      public Depreciationmethod newInstance() {
        return new Depreciationmethod();
      }

      public void deliverPrePersist(Depreciationmethod targetEntity) {

      }

      public void deliverPostPersist(Depreciationmethod targetEntity) {

      }

      public void deliverPreUpdate(Depreciationmethod targetEntity) {

      }

      public void deliverPostUpdate(Depreciationmethod targetEntity) {

      }

      public void deliverPreRemove(Depreciationmethod targetEntity) {

      }

      public void deliverPostRemove(Depreciationmethod targetEntity) {

      }

      public void deliverPostLoad(Depreciationmethod targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getFormula();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "formula";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setFormula((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Depreciationmethod) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Depreciationmethod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Depreciationmethod) entityInstance).setRecSt((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partyrelationship() {
    final ErraiEntityType entityType = new ErraiEntityType<Partyrelationship>("Partyrelationship", Partyrelationship.class) {
      public Partyrelationship newInstance() {
        return new Partyrelationship();
      }

      public void deliverPrePersist(Partyrelationship targetEntity) {

      }

      public void deliverPostPersist(Partyrelationship targetEntity) {

      }

      public void deliverPreUpdate(Partyrelationship targetEntity) {

      }

      public void deliverPostUpdate(Partyrelationship targetEntity) {

      }

      public void deliverPreRemove(Partyrelationship targetEntity) {

      }

      public void deliverPostRemove(Partyrelationship targetEntity) {

      }

      public void deliverPostLoad(Partyrelationship targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getPartyRelStat();
      }
      public Class getBindableJavaType() {
        return Partyrelationshipstatus.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Partyrelationshipstatus.class;
      }
      public String getName() {
        return "partyRelStat";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrelationshipstatus.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setPartyRelStat((Partyrelationshipstatus) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getFromPartyRole();
      }
      public Class getBindableJavaType() {
        return Partyrole.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Partyrole.class;
      }
      public String getName() {
        return "fromPartyRole";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrole.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setFromPartyRole((Partyrole) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getToPartyRole();
      }
      public Class getBindableJavaType() {
        return Partyrole.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Partyrole.class;
      }
      public String getName() {
        return "toPartyRole";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrole.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setToPartyRole((Partyrole) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getTermTy();
      }
      public Class getBindableJavaType() {
        return Terminationtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Terminationtype.class;
      }
      public String getName() {
        return "termTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Terminationtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setTermTy((Terminationtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getPartyRel();
      }
      public Class getBindableJavaType() {
        return Partyrelationshiptype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Partyrelationshiptype.class;
      }
      public String getName() {
        return "partyRel";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrelationshiptype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setPartyRel((Partyrelationshiptype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getTermReason();
      }
      public Class getBindableJavaType() {
        return Terminationreason.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Terminationreason.class;
      }
      public String getName() {
        return "termReason";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Terminationreason.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setTermReason((Terminationreason) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationship) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationship;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationship) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Systemuser() {
    final ErraiEntityType entityType = new ErraiEntityType<Systemuser>("Systemuser", Systemuser.class) {
      public Systemuser newInstance() {
        return new Systemuser();
      }

      public void deliverPrePersist(Systemuser targetEntity) {

      }

      public void deliverPostPersist(Systemuser targetEntity) {

      }

      public void deliverPreUpdate(Systemuser targetEntity) {

      }

      public void deliverPostUpdate(Systemuser targetEntity) {

      }

      public void deliverPreRemove(Systemuser targetEntity) {

      }

      public void deliverPostRemove(Systemuser targetEntity) {

      }

      public void deliverPostLoad(Systemuser targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getLockedFg();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lockedFg";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setLockedFg((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getPassword();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "password";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setPassword((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getUserNm();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "userNm";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setUserNm((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getLastLoginDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastLoginDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setLastLoginDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Systemuser) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Systemuser;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Systemuser) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Facility() {
    final ErraiEntityType entityType = new ErraiEntityType<Facility>("Facility", Facility.class) {
      public Facility newInstance() {
        return new Facility();
      }

      public void deliverPrePersist(Facility targetEntity) {

      }

      public void deliverPostPersist(Facility targetEntity) {

      }

      public void deliverPreUpdate(Facility targetEntity) {

      }

      public void deliverPostUpdate(Facility targetEntity) {

      }

      public void deliverPreRemove(Facility targetEntity) {

      }

      public void deliverPostRemove(Facility targetEntity) {

      }

      public void deliverPostLoad(Facility targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getFacilityTy();
      }
      public Class getBindableJavaType() {
        return Facilitytype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Facilitytype.class;
      }
      public String getName() {
        return "facilityTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Facilitytype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setFacilityTy((Facilitytype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Facility) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Facility;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Facility) entityInstance).setCreatedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Glbudgetxref() {
    final ErraiEntityType entityType = new ErraiEntityType<Glbudgetxref>("Glbudgetxref", Glbudgetxref.class) {
      public Glbudgetxref newInstance() {
        return new Glbudgetxref();
      }

      public void deliverPrePersist(Glbudgetxref targetEntity) {

      }

      public void deliverPostPersist(Glbudgetxref targetEntity) {

      }

      public void deliverPreUpdate(Glbudgetxref targetEntity) {

      }

      public void deliverPostUpdate(Glbudgetxref targetEntity) {

      }

      public void deliverPreRemove(Glbudgetxref targetEntity) {

      }

      public void deliverPostRemove(Glbudgetxref targetEntity) {

      }

      public void deliverPostLoad(Glbudgetxref targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getBudgetItemTy();
      }
      public Class getBindableJavaType() {
        return Budgetitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Budgetitemtype.class;
      }
      public String getName() {
        return "budgetItemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budgetitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setBudgetItemTy((Budgetitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getAmount();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setAmount((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getAllocPercentage();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "allocPercentage";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setAllocPercentage((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getGlAccount();
      }
      public Class getBindableJavaType() {
        return Generalledgeraccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Generalledgeraccount.class;
      }
      public String getName() {
        return "glAccount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Generalledgeraccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setGlAccount((Generalledgeraccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Glbudgetxref) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Glbudgetxref;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Glbudgetxref) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budgetstatus() {
    final ErraiEntityType entityType = new ErraiEntityType<Budgetstatus>("Budgetstatus", Budgetstatus.class) {
      public Budgetstatus newInstance() {
        return new Budgetstatus();
      }

      public void deliverPrePersist(Budgetstatus targetEntity) {

      }

      public void deliverPostPersist(Budgetstatus targetEntity) {

      }

      public void deliverPreUpdate(Budgetstatus targetEntity) {

      }

      public void deliverPostUpdate(Budgetstatus targetEntity) {

      }

      public void deliverPreRemove(Budgetstatus targetEntity) {

      }

      public void deliverPostRemove(Budgetstatus targetEntity) {

      }

      public void deliverPostLoad(Budgetstatus targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getStatusTy();
      }
      public Class getBindableJavaType() {
        return Budgetstatustype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Budgetstatustype.class;
      }
      public String getName() {
        return "statusTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budgetstatustype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setStatusTy((Budgetstatustype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getBudget();
      }
      public Class getBindableJavaType() {
        return Budget.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Budget.class;
      }
      public String getName() {
        return "budget";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Budget.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setBudget((Budget) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getStatusDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "statusDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setStatusDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getComment();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "comment";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setComment((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetstatus) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetstatus;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetstatus) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partyrole() {
    final ErraiEntityType entityType = new ErraiEntityType<Partyrole>("Partyrole", Partyrole.class) {
      public Partyrole newInstance() {
        return new Partyrole();
      }

      public void deliverPrePersist(Partyrole targetEntity) {

      }

      public void deliverPostPersist(Partyrole targetEntity) {

      }

      public void deliverPreUpdate(Partyrole targetEntity) {

      }

      public void deliverPostUpdate(Partyrole targetEntity) {

      }

      public void deliverPreRemove(Partyrole targetEntity) {

      }

      public void deliverPostRemove(Partyrole targetEntity) {

      }

      public void deliverPostLoad(Partyrole targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getPartyRoleTy();
      }
      public Class getBindableJavaType() {
        return Partyroletype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Partyroletype.class;
      }
      public String getName() {
        return "partyRoleTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyroletype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setPartyRoleTy((Partyroletype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrole) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrole) entityInstance).setToDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementterm() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementterm>("Agreementterm", Agreementterm.class) {
      public Agreementterm newInstance() {
        return new Agreementterm();
      }

      public void deliverPrePersist(Agreementterm targetEntity) {

      }

      public void deliverPostPersist(Agreementterm targetEntity) {

      }

      public void deliverPreUpdate(Agreementterm targetEntity) {

      }

      public void deliverPostUpdate(Agreementterm targetEntity) {

      }

      public void deliverPreRemove(Agreementterm targetEntity) {

      }

      public void deliverPostRemove(Agreementterm targetEntity) {

      }

      public void deliverPostLoad(Agreementterm targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getTermTy();
      }
      public Class getBindableJavaType() {
        return Termtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Termtype.class;
      }
      public String getName() {
        return "termTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Termtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setTermTy((Termtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getAgreement();
      }
      public Class getBindableJavaType() {
        return Agreement.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Agreement.class;
      }
      public String getName() {
        return "agreement";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreement.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setAgreement((Agreement) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getAgreementItem();
      }
      public Class getBindableJavaType() {
        return Agreementitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Agreementitem.class;
      }
      public String getName() {
        return "agreementItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreementitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setAgreementItem((Agreementitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementterm) entityInstance).getTermValue();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementterm;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "termValue";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementterm) entityInstance).setTermValue((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Productfeaturecategory() {
    final ErraiEntityType entityType = new ErraiEntityType<Productfeaturecategory>("Productfeaturecategory", Productfeaturecategory.class) {
      public Productfeaturecategory newInstance() {
        return new Productfeaturecategory();
      }

      public void deliverPrePersist(Productfeaturecategory targetEntity) {

      }

      public void deliverPostPersist(Productfeaturecategory targetEntity) {

      }

      public void deliverPreUpdate(Productfeaturecategory targetEntity) {

      }

      public void deliverPostUpdate(Productfeaturecategory targetEntity) {

      }

      public void deliverPreRemove(Productfeaturecategory targetEntity) {

      }

      public void deliverPostRemove(Productfeaturecategory targetEntity) {

      }

      public void deliverPostLoad(Productfeaturecategory targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturecategory) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturecategory;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturecategory) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementrole() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementrole>("Agreementrole", Agreementrole.class) {
      public Agreementrole newInstance() {
        return new Agreementrole();
      }

      public void deliverPrePersist(Agreementrole targetEntity) {

      }

      public void deliverPostPersist(Agreementrole targetEntity) {

      }

      public void deliverPreUpdate(Agreementrole targetEntity) {

      }

      public void deliverPostUpdate(Agreementrole targetEntity) {

      }

      public void deliverPreRemove(Agreementrole targetEntity) {

      }

      public void deliverPostRemove(Agreementrole targetEntity) {

      }

      public void deliverPostLoad(Agreementrole targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getAgreement();
      }
      public Class getBindableJavaType() {
        return Agreement.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Agreement.class;
      }
      public String getName() {
        return "agreement";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreement.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setAgreement((Agreement) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getAgreementRoleTy();
      }
      public Class getBindableJavaType() {
        return Agreementroletype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Agreementroletype.class;
      }
      public String getName() {
        return "agreementRoleTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreementroletype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setAgreementRoleTy((Agreementroletype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementrole) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementrole;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementrole) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Supplierproduct() {
    final ErraiEntityType entityType = new ErraiEntityType<Supplierproduct>("Supplierproduct", Supplierproduct.class) {
      public Supplierproduct newInstance() {
        return new Supplierproduct();
      }

      public void deliverPrePersist(Supplierproduct targetEntity) {

      }

      public void deliverPostPersist(Supplierproduct targetEntity) {

      }

      public void deliverPreUpdate(Supplierproduct targetEntity) {

      }

      public void deliverPostUpdate(Supplierproduct targetEntity) {

      }

      public void deliverPreRemove(Supplierproduct targetEntity) {

      }

      public void deliverPostRemove(Supplierproduct targetEntity) {

      }

      public void deliverPostLoad(Supplierproduct targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getSupplier();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "supplier";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setSupplier((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getRating();
      }
      public Class getBindableJavaType() {
        return Ratingtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Ratingtype.class;
      }
      public String getName() {
        return "rating";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Ratingtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setRating((Ratingtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getProd();
      }
      public Class getBindableJavaType() {
        return Product.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Product.class;
      }
      public String getName() {
        return "prod";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Product.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setProd((Product) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getRemarks();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "remarks";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setRemarks((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getAvailFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "availFromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setAvailFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getPref();
      }
      public Class getBindableJavaType() {
        return Preferencetype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Preferencetype.class;
      }
      public String getName() {
        return "pref";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Preferencetype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setPref((Preferencetype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Supplierproduct) entityInstance).getAvailToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Supplierproduct;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "availToDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Supplierproduct) entityInstance).setAvailToDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccountroletype() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccountroletype>("Financialaccountroletype", Financialaccountroletype.class) {
      public Financialaccountroletype newInstance() {
        return new Financialaccountroletype();
      }

      public void deliverPrePersist(Financialaccountroletype targetEntity) {

      }

      public void deliverPostPersist(Financialaccountroletype targetEntity) {

      }

      public void deliverPreUpdate(Financialaccountroletype targetEntity) {

      }

      public void deliverPostUpdate(Financialaccountroletype targetEntity) {

      }

      public void deliverPreRemove(Financialaccountroletype targetEntity) {

      }

      public void deliverPostRemove(Financialaccountroletype targetEntity) {

      }

      public void deliverPostLoad(Financialaccountroletype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccountroletype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccountroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccountroletype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccount() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccount>("Financialaccount", Financialaccount.class) {
      public Financialaccount newInstance() {
        return new Financialaccount();
      }

      public void deliverPrePersist(Financialaccount targetEntity) {

      }

      public void deliverPostPersist(Financialaccount targetEntity) {

      }

      public void deliverPreUpdate(Financialaccount targetEntity) {

      }

      public void deliverPostUpdate(Financialaccount targetEntity) {

      }

      public void deliverPreRemove(Financialaccount targetEntity) {

      }

      public void deliverPostRemove(Financialaccount targetEntity) {

      }

      public void deliverPostLoad(Financialaccount targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccount) entityInstance).getFinAcctTy();
      }
      public Class getBindableJavaType() {
        return Financialaccounttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccount;
      }
      public Class getJavaType() {
        return Financialaccounttype.class;
      }
      public String getName() {
        return "finAcctTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccounttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccount) entityInstance).setFinAcctTy((Financialaccounttype) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype() {
    final ErraiEntityType entityType = new ErraiEntityType<Contactmechanismpurposetype>("Contactmechanismpurposetype", Contactmechanismpurposetype.class) {
      public Contactmechanismpurposetype newInstance() {
        return new Contactmechanismpurposetype();
      }

      public void deliverPrePersist(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPostPersist(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPreUpdate(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPostUpdate(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPreRemove(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPostRemove(Contactmechanismpurposetype targetEntity) {

      }

      public void deliverPostLoad(Contactmechanismpurposetype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismpurposetype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismpurposetype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Paymenttype() {
    final ErraiEntityType entityType = new ErraiEntityType<Paymenttype>("Paymenttype", Paymenttype.class) {
      public Paymenttype newInstance() {
        return new Paymenttype();
      }

      public void deliverPrePersist(Paymenttype targetEntity) {

      }

      public void deliverPostPersist(Paymenttype targetEntity) {

      }

      public void deliverPreUpdate(Paymenttype targetEntity) {

      }

      public void deliverPostUpdate(Paymenttype targetEntity) {

      }

      public void deliverPreRemove(Paymenttype targetEntity) {

      }

      public void deliverPostRemove(Paymenttype targetEntity) {

      }

      public void deliverPostLoad(Paymenttype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymenttype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymenttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymenttype) entityInstance).setRecSt((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoicestatus() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoicestatus>("Invoicestatus", Invoicestatus.class) {
      public Invoicestatus newInstance() {
        return new Invoicestatus();
      }

      public void deliverPrePersist(Invoicestatus targetEntity) {

      }

      public void deliverPostPersist(Invoicestatus targetEntity) {

      }

      public void deliverPreUpdate(Invoicestatus targetEntity) {

      }

      public void deliverPostUpdate(Invoicestatus targetEntity) {

      }

      public void deliverPreRemove(Invoicestatus targetEntity) {

      }

      public void deliverPostRemove(Invoicestatus targetEntity) {

      }

      public void deliverPostLoad(Invoicestatus targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getInvoice();
      }
      public Class getBindableJavaType() {
        return Invoice.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Invoice.class;
      }
      public String getName() {
        return "invoice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoice.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setInvoice((Invoice) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getInvoiceStatTy();
      }
      public Class getBindableJavaType() {
        return Invoicestatustype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return Invoicestatustype.class;
      }
      public String getName() {
        return "invoiceStatTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoicestatustype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setInvoiceStatTy((Invoicestatustype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatus) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatus) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Party() {
    final ErraiEntityType entityType = new ErraiEntityType<Party>("Party", Party.class) {
      public Party newInstance() {
        return new Party();
      }

      public void deliverPrePersist(Party targetEntity) {

      }

      public void deliverPostPersist(Party targetEntity) {

      }

      public void deliverPreUpdate(Party targetEntity) {

      }

      public void deliverPostUpdate(Party targetEntity) {

      }

      public void deliverPreRemove(Party targetEntity) {

      }

      public void deliverPostRemove(Party targetEntity) {

      }

      public void deliverPostLoad(Party targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getPartyTy();
      }
      public Class getBindableJavaType() {
        return Partytype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Partytype.class;
      }
      public String getName() {
        return "partyTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partytype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setPartyTy((Partytype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Party) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Party;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Party) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoice() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoice>("Invoice", Invoice.class) {
      public Invoice newInstance() {
        return new Invoice();
      }

      public void deliverPrePersist(Invoice targetEntity) {

      }

      public void deliverPostPersist(Invoice targetEntity) {

      }

      public void deliverPreUpdate(Invoice targetEntity) {

      }

      public void deliverPostUpdate(Invoice targetEntity) {

      }

      public void deliverPreRemove(Invoice targetEntity) {

      }

      public void deliverPostRemove(Invoice targetEntity) {

      }

      public void deliverPostLoad(Invoice targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getBillingAcct();
      }
      public Class getBindableJavaType() {
        return Billingaccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Billingaccount.class;
      }
      public String getName() {
        return "billingAcct";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Billingaccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setBillingAcct((Billingaccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getToParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "toParty";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setToParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getFromContMech();
      }
      public Class getBindableJavaType() {
        return Contactmechanism.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Contactmechanism.class;
      }
      public String getName() {
        return "fromContMech";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Contactmechanism.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setFromContMech((Contactmechanism) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getToContMech();
      }
      public Class getBindableJavaType() {
        return Contactmechanism.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Contactmechanism.class;
      }
      public String getName() {
        return "toContMech";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Contactmechanism.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setToContMech((Contactmechanism) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getFromParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "fromParty";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setFromParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getMessage();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "message";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setMessage((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoice) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoice;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoice) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Fixedasset() {
    final ErraiEntityType entityType = new ErraiEntityType<Fixedasset>("Fixedasset", Fixedasset.class) {
      public Fixedasset newInstance() {
        return new Fixedasset();
      }

      public void deliverPrePersist(Fixedasset targetEntity) {

      }

      public void deliverPostPersist(Fixedasset targetEntity) {

      }

      public void deliverPreUpdate(Fixedasset targetEntity) {

      }

      public void deliverPostUpdate(Fixedasset targetEntity) {

      }

      public void deliverPreRemove(Fixedasset targetEntity) {

      }

      public void deliverPostRemove(Fixedasset targetEntity) {

      }

      public void deliverPostLoad(Fixedasset targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getProductionCapacity();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "productionCapacity";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setProductionCapacity((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getAquiredDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "aquiredDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setAquiredDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getNextServicedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "nextServicedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setNextServicedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getUom();
      }
      public Class getBindableJavaType() {
        return Uom.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Uom.class;
      }
      public String getName() {
        return "uom";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Uom.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setUom((Uom) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getLastServicedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastServicedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setLastServicedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedasset) entityInstance).getFixedAssetTy();
      }
      public Class getBindableJavaType() {
        return Fixedassettype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedasset;
      }
      public Class getJavaType() {
        return Fixedassettype.class;
      }
      public String getName() {
        return "fixedAssetTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Fixedassettype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedasset) entityInstance).setFixedAssetTy((Fixedassettype) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoiceterm() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoiceterm>("Invoiceterm", Invoiceterm.class) {
      public Invoiceterm newInstance() {
        return new Invoiceterm();
      }

      public void deliverPrePersist(Invoiceterm targetEntity) {

      }

      public void deliverPostPersist(Invoiceterm targetEntity) {

      }

      public void deliverPreUpdate(Invoiceterm targetEntity) {

      }

      public void deliverPostUpdate(Invoiceterm targetEntity) {

      }

      public void deliverPreRemove(Invoiceterm targetEntity) {

      }

      public void deliverPostRemove(Invoiceterm targetEntity) {

      }

      public void deliverPostLoad(Invoiceterm targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getTermValue();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "termValue";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setTermValue((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getInvoiceItem();
      }
      public Class getBindableJavaType() {
        return Invoiceitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Invoiceitem.class;
      }
      public String getName() {
        return "invoiceItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setInvoiceItem((Invoiceitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getInvoice();
      }
      public Class getBindableJavaType() {
        return Invoice.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Invoice.class;
      }
      public String getName() {
        return "invoice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoice.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setInvoice((Invoice) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getTermTy();
      }
      public Class getBindableJavaType() {
        return Termtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Termtype.class;
      }
      public String getName() {
        return "termTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Termtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setTermTy((Termtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceterm) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceterm;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceterm) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementroletype() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementroletype>("Agreementroletype", Agreementroletype.class) {
      public Agreementroletype newInstance() {
        return new Agreementroletype();
      }

      public void deliverPrePersist(Agreementroletype targetEntity) {

      }

      public void deliverPostPersist(Agreementroletype targetEntity) {

      }

      public void deliverPreUpdate(Agreementroletype targetEntity) {

      }

      public void deliverPostUpdate(Agreementroletype targetEntity) {

      }

      public void deliverPreRemove(Agreementroletype targetEntity) {

      }

      public void deliverPostRemove(Agreementroletype targetEntity) {

      }

      public void deliverPostLoad(Agreementroletype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementroletype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementroletype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementroletype) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Generalledgeraccounttype() {
    final ErraiEntityType entityType = new ErraiEntityType<Generalledgeraccounttype>("Generalledgeraccounttype", Generalledgeraccounttype.class) {
      public Generalledgeraccounttype newInstance() {
        return new Generalledgeraccounttype();
      }

      public void deliverPrePersist(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPostPersist(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPreUpdate(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPostUpdate(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPreRemove(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPostRemove(Generalledgeraccounttype targetEntity) {

      }

      public void deliverPostLoad(Generalledgeraccounttype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccounttype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccounttype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttransaction() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccounttransaction>("Financialaccounttransaction", Financialaccounttransaction.class) {
      public Financialaccounttransaction newInstance() {
        return new Financialaccounttransaction();
      }

      public void deliverPrePersist(Financialaccounttransaction targetEntity) {

      }

      public void deliverPostPersist(Financialaccounttransaction targetEntity) {

      }

      public void deliverPreUpdate(Financialaccounttransaction targetEntity) {

      }

      public void deliverPostUpdate(Financialaccounttransaction targetEntity) {

      }

      public void deliverPreRemove(Financialaccounttransaction targetEntity) {

      }

      public void deliverPostRemove(Financialaccounttransaction targetEntity) {

      }

      public void deliverPostLoad(Financialaccounttransaction targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getFinTxnTy();
      }
      public Class getBindableJavaType() {
        return Financialaccounttransactiontype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Financialaccounttransactiontype.class;
      }
      public String getName() {
        return "finTxnTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccounttransactiontype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setFinTxnTy((Financialaccounttransactiontype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getFinAcct();
      }
      public Class getBindableJavaType() {
        return Financialaccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Financialaccount.class;
      }
      public String getName() {
        return "finAcct";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setFinAcct((Financialaccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getEntryDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "entryDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setEntryDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransaction) entityInstance).getTransactionDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "transactionDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransaction) entityInstance).setTransactionDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Geoboundry() {
    final ErraiEntityType entityType = new ErraiEntityType<Geoboundry>("Geoboundry", Geoboundry.class) {
      public Geoboundry newInstance() {
        return new Geoboundry();
      }

      public void deliverPrePersist(Geoboundry targetEntity) {

      }

      public void deliverPostPersist(Geoboundry targetEntity) {

      }

      public void deliverPreUpdate(Geoboundry targetEntity) {

      }

      public void deliverPostUpdate(Geoboundry targetEntity) {

      }

      public void deliverPreRemove(Geoboundry targetEntity) {

      }

      public void deliverPostRemove(Geoboundry targetEntity) {

      }

      public void deliverPostLoad(Geoboundry targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getGeoBoundryTy();
      }
      public Class getBindableJavaType() {
        return Geoboundrytype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Geoboundrytype.class;
      }
      public String getName() {
        return "geoBoundryTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Geoboundrytype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setGeoBoundryTy((Geoboundrytype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getAbbr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "abbr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setAbbr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getParentGeoBoundry();
      }
      public Class getBindableJavaType() {
        return Geoboundry.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Geoboundry.class;
      }
      public String getName() {
        return "parentGeoBoundry";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Geoboundry.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setParentGeoBoundry((Geoboundry) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getGeoCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "geoCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setGeoCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundry) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundry;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundry) entityInstance).setCreatedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Organization() {
    final ErraiEntityType entityType = new ErraiEntityType<Organization>("Organization", Organization.class) {
      public Organization newInstance() {
        return new Organization();
      }

      public void deliverPrePersist(Organization targetEntity) {

      }

      public void deliverPostPersist(Organization targetEntity) {

      }

      public void deliverPreUpdate(Organization targetEntity) {

      }

      public void deliverPostUpdate(Organization targetEntity) {

      }

      public void deliverPreRemove(Organization targetEntity) {

      }

      public void deliverPostRemove(Organization targetEntity) {

      }

      public void deliverPostLoad(Organization targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "party";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getTax();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "tax";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setTax((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getBusinessNo();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "businessNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setBusinessNo((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organization) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organization;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organization) entityInstance).setCreatedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Generalledgeraccount() {
    final ErraiEntityType entityType = new ErraiEntityType<Generalledgeraccount>("Generalledgeraccount", Generalledgeraccount.class) {
      public Generalledgeraccount newInstance() {
        return new Generalledgeraccount();
      }

      public void deliverPrePersist(Generalledgeraccount targetEntity) {

      }

      public void deliverPostPersist(Generalledgeraccount targetEntity) {

      }

      public void deliverPreUpdate(Generalledgeraccount targetEntity) {

      }

      public void deliverPostUpdate(Generalledgeraccount targetEntity) {

      }

      public void deliverPreRemove(Generalledgeraccount targetEntity) {

      }

      public void deliverPostRemove(Generalledgeraccount targetEntity) {

      }

      public void deliverPostLoad(Generalledgeraccount targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getGlAcctTy();
      }
      public Class getBindableJavaType() {
        return Generalledgeraccounttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Generalledgeraccounttype.class;
      }
      public String getName() {
        return "glAcctTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Generalledgeraccounttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setGlAcctTy((Generalledgeraccounttype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Generalledgeraccount) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Generalledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Generalledgeraccount) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Producttype() {
    final ErraiEntityType entityType = new ErraiEntityType<Producttype>("Producttype", Producttype.class) {
      public Producttype newInstance() {
        return new Producttype();
      }

      public void deliverPrePersist(Producttype targetEntity) {

      }

      public void deliverPostPersist(Producttype targetEntity) {

      }

      public void deliverPreUpdate(Producttype targetEntity) {

      }

      public void deliverPostUpdate(Producttype targetEntity) {

      }

      public void deliverPreRemove(Producttype targetEntity) {

      }

      public void deliverPostRemove(Producttype targetEntity) {

      }

      public void deliverPostLoad(Producttype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Producttype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Producttype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Producttype) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Terminationtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Terminationtype>("Terminationtype", Terminationtype.class) {
      public Terminationtype newInstance() {
        return new Terminationtype();
      }

      public void deliverPrePersist(Terminationtype targetEntity) {

      }

      public void deliverPostPersist(Terminationtype targetEntity) {

      }

      public void deliverPreUpdate(Terminationtype targetEntity) {

      }

      public void deliverPostUpdate(Terminationtype targetEntity) {

      }

      public void deliverPreRemove(Terminationtype targetEntity) {

      }

      public void deliverPostRemove(Terminationtype targetEntity) {

      }

      public void deliverPostLoad(Terminationtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationtype) entityInstance).setRecSt((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Paymentapplication() {
    final ErraiEntityType entityType = new ErraiEntityType<Paymentapplication>("Paymentapplication", Paymentapplication.class) {
      public Paymentapplication newInstance() {
        return new Paymentapplication();
      }

      public void deliverPrePersist(Paymentapplication targetEntity) {

      }

      public void deliverPostPersist(Paymentapplication targetEntity) {

      }

      public void deliverPreUpdate(Paymentapplication targetEntity) {

      }

      public void deliverPostUpdate(Paymentapplication targetEntity) {

      }

      public void deliverPreRemove(Paymentapplication targetEntity) {

      }

      public void deliverPostRemove(Paymentapplication targetEntity) {

      }

      public void deliverPostLoad(Paymentapplication targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getAmountApplied();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amountApplied";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setAmountApplied((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getBillingAcct();
      }
      public Class getBindableJavaType() {
        return Billingaccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Billingaccount.class;
      }
      public String getName() {
        return "billingAcct";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Billingaccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setBillingAcct((Billingaccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getInvoice();
      }
      public Class getBindableJavaType() {
        return Invoice.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Invoice.class;
      }
      public String getName() {
        return "invoice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoice.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setInvoice((Invoice) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getPayment();
      }
      public Class getBindableJavaType() {
        return Payment.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Payment.class;
      }
      public String getName() {
        return "payment";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Payment.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setPayment((Payment) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getInvoiceItem();
      }
      public Class getBindableJavaType() {
        return Invoiceitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return Invoiceitem.class;
      }
      public String getName() {
        return "invoiceItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setInvoiceItem((Invoiceitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentapplication) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentapplication;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentapplication) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partyrelationshipstatus() {
    final ErraiEntityType entityType = new ErraiEntityType<Partyrelationshipstatus>("Partyrelationshipstatus", Partyrelationshipstatus.class) {
      public Partyrelationshipstatus newInstance() {
        return new Partyrelationshipstatus();
      }

      public void deliverPrePersist(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPostPersist(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPreUpdate(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPostUpdate(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPreRemove(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPostRemove(Partyrelationshipstatus targetEntity) {

      }

      public void deliverPostLoad(Partyrelationshipstatus targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshipstatus) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshipstatus) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoicestatustype() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoicestatustype>("Invoicestatustype", Invoicestatustype.class) {
      public Invoicestatustype newInstance() {
        return new Invoicestatustype();
      }

      public void deliverPrePersist(Invoicestatustype targetEntity) {

      }

      public void deliverPostPersist(Invoicestatustype targetEntity) {

      }

      public void deliverPreUpdate(Invoicestatustype targetEntity) {

      }

      public void deliverPostUpdate(Invoicestatustype targetEntity) {

      }

      public void deliverPreRemove(Invoicestatustype targetEntity) {

      }

      public void deliverPostRemove(Invoicestatustype targetEntity) {

      }

      public void deliverPostLoad(Invoicestatustype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoicestatustype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoicestatustype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoicestatustype) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Accountingtransactiondetail() {
    final ErraiEntityType entityType = new ErraiEntityType<Accountingtransactiondetail>("Accountingtransactiondetail", Accountingtransactiondetail.class) {
      public Accountingtransactiondetail newInstance() {
        return new Accountingtransactiondetail();
      }

      public void deliverPrePersist(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPostPersist(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPreUpdate(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPostUpdate(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPreRemove(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPostRemove(Accountingtransactiondetail targetEntity) {

      }

      public void deliverPostLoad(Accountingtransactiondetail targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getDebitCreditFg();
      }
      public Class getBindableJavaType() {
        return Boolean.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Boolean.class;
      }
      public String getName() {
        return "debitCreditFg";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Boolean.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setDebitCreditFg((Boolean) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getAssociatedDetail();
      }
      public Class getBindableJavaType() {
        return Accountingtransactiondetail.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Accountingtransactiondetail.class;
      }
      public String getName() {
        return "associatedDetail";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingtransactiondetail.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setAssociatedDetail((Accountingtransactiondetail) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getTransaction();
      }
      public Class getBindableJavaType() {
        return Accountingtransaction.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Accountingtransaction.class;
      }
      public String getName() {
        return "transaction";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingtransaction.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setTransaction((Accountingtransaction) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiondetail) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiondetail) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Budgetitemtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Budgetitemtype>("Budgetitemtype", Budgetitemtype.class) {
      public Budgetitemtype newInstance() {
        return new Budgetitemtype();
      }

      public void deliverPrePersist(Budgetitemtype targetEntity) {

      }

      public void deliverPostPersist(Budgetitemtype targetEntity) {

      }

      public void deliverPreUpdate(Budgetitemtype targetEntity) {

      }

      public void deliverPostUpdate(Budgetitemtype targetEntity) {

      }

      public void deliverPreRemove(Budgetitemtype targetEntity) {

      }

      public void deliverPostRemove(Budgetitemtype targetEntity) {

      }

      public void deliverPostLoad(Budgetitemtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Budgetitemtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Budgetitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Budgetitemtype) entityInstance).setRowTs((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Inventoryitemstatus() {
    final ErraiEntityType entityType = new ErraiEntityType<Inventoryitemstatus>("Inventoryitemstatus", Inventoryitemstatus.class) {
      public Inventoryitemstatus newInstance() {
        return new Inventoryitemstatus();
      }

      public void deliverPrePersist(Inventoryitemstatus targetEntity) {

      }

      public void deliverPostPersist(Inventoryitemstatus targetEntity) {

      }

      public void deliverPreUpdate(Inventoryitemstatus targetEntity) {

      }

      public void deliverPostUpdate(Inventoryitemstatus targetEntity) {

      }

      public void deliverPreRemove(Inventoryitemstatus targetEntity) {

      }

      public void deliverPostRemove(Inventoryitemstatus targetEntity) {

      }

      public void deliverPostLoad(Inventoryitemstatus targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Inventoryitemstatus) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Inventoryitemstatus;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Inventoryitemstatus) entityInstance).setId((Long) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Standardtimeperiod() {
    final ErraiEntityType entityType = new ErraiEntityType<Standardtimeperiod>("Standardtimeperiod", Standardtimeperiod.class) {
      public Standardtimeperiod newInstance() {
        return new Standardtimeperiod();
      }

      public void deliverPrePersist(Standardtimeperiod targetEntity) {

      }

      public void deliverPostPersist(Standardtimeperiod targetEntity) {

      }

      public void deliverPreUpdate(Standardtimeperiod targetEntity) {

      }

      public void deliverPostUpdate(Standardtimeperiod targetEntity) {

      }

      public void deliverPreRemove(Standardtimeperiod targetEntity) {

      }

      public void deliverPostRemove(Standardtimeperiod targetEntity) {

      }

      public void deliverPostLoad(Standardtimeperiod targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getPeriodTy();
      }
      public Class getBindableJavaType() {
        return Periodtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Periodtype.class;
      }
      public String getName() {
        return "periodTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Periodtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setPeriodTy((Periodtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Standardtimeperiod) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Standardtimeperiod;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Standardtimeperiod) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Ratingtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Ratingtype>("Ratingtype", Ratingtype.class) {
      public Ratingtype newInstance() {
        return new Ratingtype();
      }

      public void deliverPrePersist(Ratingtype targetEntity) {

      }

      public void deliverPostPersist(Ratingtype targetEntity) {

      }

      public void deliverPreUpdate(Ratingtype targetEntity) {

      }

      public void deliverPostUpdate(Ratingtype targetEntity) {

      }

      public void deliverPreRemove(Ratingtype targetEntity) {

      }

      public void deliverPostRemove(Ratingtype targetEntity) {

      }

      public void deliverPostLoad(Ratingtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Ratingtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Ratingtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Ratingtype) entityInstance).setRowTs((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Accountingtransaction() {
    final ErraiEntityType entityType = new ErraiEntityType<Accountingtransaction>("Accountingtransaction", Accountingtransaction.class) {
      public Accountingtransaction newInstance() {
        return new Accountingtransaction();
      }

      public void deliverPrePersist(Accountingtransaction targetEntity) {

      }

      public void deliverPostPersist(Accountingtransaction targetEntity) {

      }

      public void deliverPreUpdate(Accountingtransaction targetEntity) {

      }

      public void deliverPostUpdate(Accountingtransaction targetEntity) {

      }

      public void deliverPreRemove(Accountingtransaction targetEntity) {

      }

      public void deliverPostRemove(Accountingtransaction targetEntity) {

      }

      public void deliverPostLoad(Accountingtransaction targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getTransactionTy();
      }
      public Class getBindableJavaType() {
        return Accountingtransactiontype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Accountingtransactiontype.class;
      }
      public String getName() {
        return "transactionTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingtransactiontype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setTransactionTy((Accountingtransactiontype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getEntryDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "entryDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setEntryDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getToParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "toParty";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setToParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getTransactionDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "transactionDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setTransactionDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getInvoice();
      }
      public Class getBindableJavaType() {
        return Invoice.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Invoice.class;
      }
      public String getName() {
        return "invoice";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoice.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setInvoice((Invoice) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getFixedAsset();
      }
      public Class getBindableJavaType() {
        return Fixedasset.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Fixedasset.class;
      }
      public String getName() {
        return "fixedAsset";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Fixedasset.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setFixedAsset((Fixedasset) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getPartyRole();
      }
      public Class getBindableJavaType() {
        return Partyrole.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Partyrole.class;
      }
      public String getName() {
        return "partyRole";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partyrole.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setPartyRole((Partyrole) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getFromParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "fromParty";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setFromParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getPayment();
      }
      public Class getBindableJavaType() {
        return Payment.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Payment.class;
      }
      public String getName() {
        return "payment";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Payment.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setPayment((Payment) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransaction) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransaction;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransaction) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Productfeaturetype() {
    final ErraiEntityType entityType = new ErraiEntityType<Productfeaturetype>("Productfeaturetype", Productfeaturetype.class) {
      public Productfeaturetype newInstance() {
        return new Productfeaturetype();
      }

      public void deliverPrePersist(Productfeaturetype targetEntity) {

      }

      public void deliverPostPersist(Productfeaturetype targetEntity) {

      }

      public void deliverPreUpdate(Productfeaturetype targetEntity) {

      }

      public void deliverPostUpdate(Productfeaturetype targetEntity) {

      }

      public void deliverPreRemove(Productfeaturetype targetEntity) {

      }

      public void deliverPostRemove(Productfeaturetype targetEntity) {

      }

      public void deliverPostLoad(Productfeaturetype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productfeaturetype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productfeaturetype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productfeaturetype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Periodtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Periodtype>("Periodtype", Periodtype.class) {
      public Periodtype newInstance() {
        return new Periodtype();
      }

      public void deliverPrePersist(Periodtype targetEntity) {

      }

      public void deliverPostPersist(Periodtype targetEntity) {

      }

      public void deliverPreUpdate(Periodtype targetEntity) {

      }

      public void deliverPostUpdate(Periodtype targetEntity) {

      }

      public void deliverPreRemove(Periodtype targetEntity) {

      }

      public void deliverPostRemove(Periodtype targetEntity) {

      }

      public void deliverPostLoad(Periodtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Periodtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Periodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Periodtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Productcategorytype() {
    final ErraiEntityType entityType = new ErraiEntityType<Productcategorytype>("Productcategorytype", Productcategorytype.class) {
      public Productcategorytype newInstance() {
        return new Productcategorytype();
      }

      public void deliverPrePersist(Productcategorytype targetEntity) {

      }

      public void deliverPostPersist(Productcategorytype targetEntity) {

      }

      public void deliverPreUpdate(Productcategorytype targetEntity) {

      }

      public void deliverPostUpdate(Productcategorytype targetEntity) {

      }

      public void deliverPreRemove(Productcategorytype targetEntity) {

      }

      public void deliverPostRemove(Productcategorytype targetEntity) {

      }

      public void deliverPostLoad(Productcategorytype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Productcategorytype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Productcategorytype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Productcategorytype) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Agreementitem() {
    final ErraiEntityType entityType = new ErraiEntityType<Agreementitem>("Agreementitem", Agreementitem.class) {
      public Agreementitem newInstance() {
        return new Agreementitem();
      }

      public void deliverPrePersist(Agreementitem targetEntity) {

      }

      public void deliverPostPersist(Agreementitem targetEntity) {

      }

      public void deliverPreUpdate(Agreementitem targetEntity) {

      }

      public void deliverPostUpdate(Agreementitem targetEntity) {

      }

      public void deliverPreRemove(Agreementitem targetEntity) {

      }

      public void deliverPostRemove(Agreementitem targetEntity) {

      }

      public void deliverPostLoad(Agreementitem targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreementImage();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "agreementImage";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreementImage((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreementText();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "agreementText";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreementText((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreementItemTy();
      }
      public Class getBindableJavaType() {
        return Agreementitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Agreementitemtype.class;
      }
      public String getName() {
        return "agreementItemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreementitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreementItemTy((Agreementitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreementItem();
      }
      public Class getBindableJavaType() {
        return Agreementitem.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Agreementitem.class;
      }
      public String getName() {
        return "agreementItem";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreementitem.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreementItem((Agreementitem) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreementDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "agreementDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreementDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Agreementitem) entityInstance).getAgreement();
      }
      public Class getBindableJavaType() {
        return Agreement.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Agreementitem;
      }
      public Class getJavaType() {
        return Agreement.class;
      }
      public String getName() {
        return "agreement";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Agreement.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Agreementitem) entityInstance).setAgreement((Agreement) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype() {
    final ErraiEntityType entityType = new ErraiEntityType<Financialaccounttransactiontype>("Financialaccounttransactiontype", Financialaccounttransactiontype.class) {
      public Financialaccounttransactiontype newInstance() {
        return new Financialaccounttransactiontype();
      }

      public void deliverPrePersist(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPostPersist(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPreUpdate(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPostUpdate(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPreRemove(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPostRemove(Financialaccounttransactiontype targetEntity) {

      }

      public void deliverPostLoad(Financialaccounttransactiontype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Financialaccounttransactiontype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Financialaccounttransactiontype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partytype() {
    final ErraiEntityType entityType = new ErraiEntityType<Partytype>("Partytype", Partytype.class) {
      public Partytype newInstance() {
        return new Partytype();
      }

      public void deliverPrePersist(Partytype targetEntity) {

      }

      public void deliverPostPersist(Partytype targetEntity) {

      }

      public void deliverPreUpdate(Partytype targetEntity) {

      }

      public void deliverPostUpdate(Partytype targetEntity) {

      }

      public void deliverPreRemove(Partytype targetEntity) {

      }

      public void deliverPostRemove(Partytype targetEntity) {

      }

      public void deliverPostLoad(Partytype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getParentCategory();
      }
      public Class getBindableJavaType() {
        return Partycategory.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Partycategory.class;
      }
      public String getName() {
        return "parentCategory";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partycategory.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setParentCategory((Partycategory) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getParentType();
      }
      public Class getBindableJavaType() {
        return Partytype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Partytype.class;
      }
      public String getName() {
        return "parentType";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Partytype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setParentType((Partytype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partytype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partytype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Contactmechanism() {
    final ErraiEntityType entityType = new ErraiEntityType<Contactmechanism>("Contactmechanism", Contactmechanism.class) {
      public Contactmechanism newInstance() {
        return new Contactmechanism();
      }

      public void deliverPrePersist(Contactmechanism targetEntity) {

      }

      public void deliverPostPersist(Contactmechanism targetEntity) {

      }

      public void deliverPreUpdate(Contactmechanism targetEntity) {

      }

      public void deliverPostUpdate(Contactmechanism targetEntity) {

      }

      public void deliverPreRemove(Contactmechanism targetEntity) {

      }

      public void deliverPostRemove(Contactmechanism targetEntity) {

      }

      public void deliverPostLoad(Contactmechanism targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanism) entityInstance).getContMechTy();
      }
      public Class getBindableJavaType() {
        return Contactmechanismtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanism;
      }
      public Class getJavaType() {
        return Contactmechanismtype.class;
      }
      public String getName() {
        return "contMechTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Contactmechanismtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanism) entityInstance).setContMechTy((Contactmechanismtype) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Document() {
    final ErraiEntityType entityType = new ErraiEntityType<Document>("Document", Document.class) {
      public Document newInstance() {
        return new Document();
      }

      public void deliverPrePersist(Document targetEntity) {

      }

      public void deliverPostPersist(Document targetEntity) {

      }

      public void deliverPreUpdate(Document targetEntity) {

      }

      public void deliverPostUpdate(Document targetEntity) {

      }

      public void deliverPreRemove(Document targetEntity) {

      }

      public void deliverPostRemove(Document targetEntity) {

      }

      public void deliverPostLoad(Document targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getDocTy();
      }
      public Class getBindableJavaType() {
        return Documenttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Documenttype.class;
      }
      public String getName() {
        return "docTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Documenttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setDocTy((Documenttype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Document) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Document;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Document) entityInstance).setVersionNo((Integer) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Termtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Termtype>("Termtype", Termtype.class) {
      public Termtype newInstance() {
        return new Termtype();
      }

      public void deliverPrePersist(Termtype targetEntity) {

      }

      public void deliverPostPersist(Termtype targetEntity) {

      }

      public void deliverPreUpdate(Termtype targetEntity) {

      }

      public void deliverPostUpdate(Termtype targetEntity) {

      }

      public void deliverPreRemove(Termtype targetEntity) {

      }

      public void deliverPostRemove(Termtype targetEntity) {

      }

      public void deliverPostLoad(Termtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Termtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Termtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Termtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Payment() {
    final ErraiEntityType entityType = new ErraiEntityType<Payment>("Payment", Payment.class) {
      public Payment newInstance() {
        return new Payment();
      }

      public void deliverPrePersist(Payment targetEntity) {

      }

      public void deliverPostPersist(Payment targetEntity) {

      }

      public void deliverPreUpdate(Payment targetEntity) {

      }

      public void deliverPostUpdate(Payment targetEntity) {

      }

      public void deliverPreRemove(Payment targetEntity) {

      }

      public void deliverPostRemove(Payment targetEntity) {

      }

      public void deliverPostLoad(Payment targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getAmount();
      }
      public Class getBindableJavaType() {
        return BigDecimal.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return BigDecimal.class;
      }
      public String getName() {
        return "amount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return BigDecimal.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setAmount((BigDecimal) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getMethodTy();
      }
      public Class getBindableJavaType() {
        return Paymentmethodtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Paymentmethodtype.class;
      }
      public String getName() {
        return "methodTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Paymentmethodtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setMethodTy((Paymentmethodtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getFinAcct();
      }
      public Class getBindableJavaType() {
        return Financialaccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Financialaccount.class;
      }
      public String getName() {
        return "finAcct";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Financialaccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setFinAcct((Financialaccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getPaymentTy();
      }
      public Class getBindableJavaType() {
        return Paymenttype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Paymenttype.class;
      }
      public String getName() {
        return "paymentTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Paymenttype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setPaymentTy((Paymenttype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Payment) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Payment;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Payment) entityInstance).setEffectiveDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Accountingtransactiontype() {
    final ErraiEntityType entityType = new ErraiEntityType<Accountingtransactiontype>("Accountingtransactiontype", Accountingtransactiontype.class) {
      public Accountingtransactiontype newInstance() {
        return new Accountingtransactiontype();
      }

      public void deliverPrePersist(Accountingtransactiontype targetEntity) {

      }

      public void deliverPostPersist(Accountingtransactiontype targetEntity) {

      }

      public void deliverPreUpdate(Accountingtransactiontype targetEntity) {

      }

      public void deliverPostUpdate(Accountingtransactiontype targetEntity) {

      }

      public void deliverPreRemove(Accountingtransactiontype targetEntity) {

      }

      public void deliverPostRemove(Accountingtransactiontype targetEntity) {

      }

      public void deliverPostLoad(Accountingtransactiontype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getParentTy();
      }
      public Class getBindableJavaType() {
        return Accountingtransactiontype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Accountingtransactiontype.class;
      }
      public String getName() {
        return "parentTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Accountingtransactiontype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setParentTy((Accountingtransactiontype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Accountingtransactiontype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Accountingtransactiontype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Accountingtransactiontype) entityInstance).setDescription((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Geoboundrytype() {
    final ErraiEntityType entityType = new ErraiEntityType<Geoboundrytype>("Geoboundrytype", Geoboundrytype.class) {
      public Geoboundrytype newInstance() {
        return new Geoboundrytype();
      }

      public void deliverPrePersist(Geoboundrytype targetEntity) {

      }

      public void deliverPostPersist(Geoboundrytype targetEntity) {

      }

      public void deliverPreUpdate(Geoboundrytype targetEntity) {

      }

      public void deliverPostUpdate(Geoboundrytype targetEntity) {

      }

      public void deliverPreRemove(Geoboundrytype targetEntity) {

      }

      public void deliverPostRemove(Geoboundrytype targetEntity) {

      }

      public void deliverPostLoad(Geoboundrytype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Geoboundrytype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Geoboundrytype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Geoboundrytype) entityInstance).setCreatedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount() {
    final ErraiEntityType entityType = new ErraiEntityType<Organizationgeneralledgeraccount>("Organizationgeneralledgeraccount", Organizationgeneralledgeraccount.class) {
      public Organizationgeneralledgeraccount newInstance() {
        return new Organizationgeneralledgeraccount();
      }

      public void deliverPrePersist(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPostPersist(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPreUpdate(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPostUpdate(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPreRemove(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPostRemove(Organizationgeneralledgeraccount targetEntity) {

      }

      public void deliverPostLoad(Organizationgeneralledgeraccount targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getFromDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "fromDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setFromDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getRefParty();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "refParty";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setRefParty((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getProductCat();
      }
      public Class getBindableJavaType() {
        return Productcategory.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Productcategory.class;
      }
      public String getName() {
        return "productCat";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Productcategory.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setProductCat((Productcategory) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getGlAccount();
      }
      public Class getBindableJavaType() {
        return Generalledgeraccount.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Generalledgeraccount.class;
      }
      public String getName() {
        return "glAccount";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Generalledgeraccount.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setGlAccount((Generalledgeraccount) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getProduct();
      }
      public Class getBindableJavaType() {
        return Product.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Product.class;
      }
      public String getName() {
        return "product";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Product.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setProduct((Product) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getToDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "toDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setToDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getOrganization();
      }
      public Class getBindableJavaType() {
        return Party.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return Party.class;
      }
      public String getName() {
        return "organization";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Party.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setOrganization((Party) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Organizationgeneralledgeraccount) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Organizationgeneralledgeraccount) entityInstance).setName((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Terminationreason() {
    final ErraiEntityType entityType = new ErraiEntityType<Terminationreason>("Terminationreason", Terminationreason.class) {
      public Terminationreason newInstance() {
        return new Terminationreason();
      }

      public void deliverPrePersist(Terminationreason targetEntity) {

      }

      public void deliverPostPersist(Terminationreason targetEntity) {

      }

      public void deliverPreUpdate(Terminationreason targetEntity) {

      }

      public void deliverPostUpdate(Terminationreason targetEntity) {

      }

      public void deliverPreRemove(Terminationreason targetEntity) {

      }

      public void deliverPostRemove(Terminationreason targetEntity) {

      }

      public void deliverPostLoad(Terminationreason targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Terminationreason) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Terminationreason;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Terminationreason) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Fixedassettype() {
    final ErraiEntityType entityType = new ErraiEntityType<Fixedassettype>("Fixedassettype", Fixedassettype.class) {
      public Fixedassettype newInstance() {
        return new Fixedassettype();
      }

      public void deliverPrePersist(Fixedassettype targetEntity) {

      }

      public void deliverPostPersist(Fixedassettype targetEntity) {

      }

      public void deliverPreUpdate(Fixedassettype targetEntity) {

      }

      public void deliverPostUpdate(Fixedassettype targetEntity) {

      }

      public void deliverPreRemove(Fixedassettype targetEntity) {

      }

      public void deliverPostRemove(Fixedassettype targetEntity) {

      }

      public void deliverPostLoad(Fixedassettype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getParentTy();
      }
      public Class getBindableJavaType() {
        return Fixedassettype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Fixedassettype.class;
      }
      public String getName() {
        return "parentTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Fixedassettype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setParentTy((Fixedassettype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Fixedassettype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Fixedassettype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Fixedassettype) entityInstance).setCreatedDt((Date) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Paymentmethodtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Paymentmethodtype>("Paymentmethodtype", Paymentmethodtype.class) {
      public Paymentmethodtype newInstance() {
        return new Paymentmethodtype();
      }

      public void deliverPrePersist(Paymentmethodtype targetEntity) {

      }

      public void deliverPostPersist(Paymentmethodtype targetEntity) {

      }

      public void deliverPreUpdate(Paymentmethodtype targetEntity) {

      }

      public void deliverPostUpdate(Paymentmethodtype targetEntity) {

      }

      public void deliverPreRemove(Paymentmethodtype targetEntity) {

      }

      public void deliverPostRemove(Paymentmethodtype targetEntity) {

      }

      public void deliverPostLoad(Paymentmethodtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Paymentmethodtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Paymentmethodtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Paymentmethodtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Invoiceitemtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Invoiceitemtype>("Invoiceitemtype", Invoiceitemtype.class) {
      public Invoiceitemtype newInstance() {
        return new Invoiceitemtype();
      }

      public void deliverPrePersist(Invoiceitemtype targetEntity) {

      }

      public void deliverPostPersist(Invoiceitemtype targetEntity) {

      }

      public void deliverPreUpdate(Invoiceitemtype targetEntity) {

      }

      public void deliverPostUpdate(Invoiceitemtype targetEntity) {

      }

      public void deliverPreRemove(Invoiceitemtype targetEntity) {

      }

      public void deliverPostRemove(Invoiceitemtype targetEntity) {

      }

      public void deliverPostLoad(Invoiceitemtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getParentItemTy();
      }
      public Class getBindableJavaType() {
        return Invoiceitemtype.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Invoiceitemtype.class;
      }
      public String getName() {
        return "parentItemTy";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Invoiceitemtype.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setParentItemTy((Invoiceitemtype) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Invoiceitemtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Invoiceitemtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Invoiceitemtype) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Contactmechanismtype() {
    final ErraiEntityType entityType = new ErraiEntityType<Contactmechanismtype>("Contactmechanismtype", Contactmechanismtype.class) {
      public Contactmechanismtype newInstance() {
        return new Contactmechanismtype();
      }

      public void deliverPrePersist(Contactmechanismtype targetEntity) {

      }

      public void deliverPostPersist(Contactmechanismtype targetEntity) {

      }

      public void deliverPreUpdate(Contactmechanismtype targetEntity) {

      }

      public void deliverPostUpdate(Contactmechanismtype targetEntity) {

      }

      public void deliverPreRemove(Contactmechanismtype targetEntity) {

      }

      public void deliverPostRemove(Contactmechanismtype targetEntity) {

      }

      public void deliverPostLoad(Contactmechanismtype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Contactmechanismtype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Contactmechanismtype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Contactmechanismtype) entityInstance).setUniverse((Universe) value);
      }
    });
    return entityType;
  }

  private ErraiEntityType createEntityType_com_cloderia_helion_client_shared_model_Partyrelationshiptype() {
    final ErraiEntityType entityType = new ErraiEntityType<Partyrelationshiptype>("Partyrelationshiptype", Partyrelationshiptype.class) {
      public Partyrelationshiptype newInstance() {
        return new Partyrelationshiptype();
      }

      public void deliverPrePersist(Partyrelationshiptype targetEntity) {

      }

      public void deliverPostPersist(Partyrelationshiptype targetEntity) {

      }

      public void deliverPreUpdate(Partyrelationshiptype targetEntity) {

      }

      public void deliverPostUpdate(Partyrelationshiptype targetEntity) {

      }

      public void deliverPreRemove(Partyrelationshiptype targetEntity) {

      }

      public void deliverPostRemove(Partyrelationshiptype targetEntity) {

      }

      public void deliverPostLoad(Partyrelationshiptype targetEntity) {

      }
    };
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getEntityCode();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "entityCode";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setEntityCode((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getLastModifiedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "lastModifiedDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setLastModifiedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getVersionNo();
      }
      public Class getBindableJavaType() {
        return Integer.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Integer.class;
      }
      public String getName() {
        return "versionNo";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Integer.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setVersionNo((Integer) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        return false;
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getUniverse();
      }
      public Class getBindableJavaType() {
        return Universe.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Universe.class;
      }
      public String getName() {
        return "universe";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.MANY_TO_ONE;
      }
      public Type getType() {
        return new Type() {
          public boolean equals(Object jp3) {
            throw new RuntimeException("Not implemented");
          }
          public Class getJavaType() {
            return Universe.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.ENTITY;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return true;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setUniverse((Universe) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getCreatedDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "createdDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setCreatedDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      private ErraiIdGenerator<Long> valueGenerator = new LongIdGenerator(this);
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getId();
      }
      public Class getBindableJavaType() {
        return Long.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Long.class;
      }
      public String getName() {
        return "id";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Long.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        return valueGenerator;
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return true;
      }
      public boolean isId() {
        return true;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setId((Long) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getDescription();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "description";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setDescription((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getRowTs();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "rowTs";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setRowTs((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getEffectiveDt();
      }
      public Class getBindableJavaType() {
        return Date.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return Date.class;
      }
      public String getName() {
        return "effectiveDt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return Date.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setEffectiveDt((Date) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getLastModifiedUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "lastModifiedUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return true;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setLastModifiedUsr((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getRecSt();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "recSt";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setRecSt((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getName();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "name";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setName((String) value);
      }
    });
    entityType.addAttribute(new ErraiSingularAttribute() {
      public boolean cascades(CascadeType cascadeType) {
        throw new UnsupportedOperationException("Not a relationship attribute");
      }
      public Object get(Object entityInstance) {
        return ((Partyrelationshiptype) entityInstance).getCreatedByUsr();
      }
      public Class getBindableJavaType() {
        return String.class;
      }
      public BindableType getBindableType() {
        return BindableType.SINGULAR_ATTRIBUTE;
      }
      public ManagedType getDeclaringType() {
        return et_com_cloderia_helion_client_shared_model_Partyrelationshiptype;
      }
      public Class getJavaType() {
        return String.class;
      }
      public String getName() {
        return "createdByUsr";
      }
      public PersistentAttributeType getPersistentAttributeType() {
        return PersistentAttributeType.BASIC;
      }
      public Type getType() {
        return new Type() {
          public Class getJavaType() {
            return String.class;
          }
          public PersistenceType getPersistenceType() {
            return PersistenceType.BASIC;
          }
        };
      }
      public ErraiIdGenerator getValueGenerator() {
        throw new UnsupportedOperationException("Not a generated attribute");
      }
      public boolean isAssociation() {
        return false;
      }
      public boolean isCollection() {
        return false;
      }
      public boolean isGeneratedValue() {
        return false;
      }
      public boolean isId() {
        return false;
      }
      public boolean isOptional() {
        return false;
      }
      public boolean isVersion() {
        return false;
      }
      public void set(Object entityInstance, Object value) {
        ((Partyrelationshiptype) entityInstance).setCreatedByUsr((String) value);
      }
    });
    return entityType;
  }

  private ErraiMetamodel createMetamodel() {
    ErraiMetamodel metamodel = new ErraiMetamodel();
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budget
    // **
    et_com_cloderia_helion_client_shared_model_Budget = createEntityType_com_cloderia_helion_client_shared_model_Budget();
    et_com_cloderia_helion_client_shared_model_Budget.addSubtype(et_com_cloderia_helion_client_shared_model_Budget);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budget);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreement
    // **
    et_com_cloderia_helion_client_shared_model_Agreement = createEntityType_com_cloderia_helion_client_shared_model_Agreement();
    et_com_cloderia_helion_client_shared_model_Agreement.addSubtype(et_com_cloderia_helion_client_shared_model_Agreement);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreement);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Universe
    // **
    et_com_cloderia_helion_client_shared_model_Universe = createEntityType_com_cloderia_helion_client_shared_model_Universe();
    et_com_cloderia_helion_client_shared_model_Universe.addSubtype(et_com_cloderia_helion_client_shared_model_Universe);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Universe);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Inventoryitem
    // **
    et_com_cloderia_helion_client_shared_model_Inventoryitem = createEntityType_com_cloderia_helion_client_shared_model_Inventoryitem();
    et_com_cloderia_helion_client_shared_model_Inventoryitem.addSubtype(et_com_cloderia_helion_client_shared_model_Inventoryitem);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Inventoryitem);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Accountingperiod
    // **
    et_com_cloderia_helion_client_shared_model_Accountingperiod = createEntityType_com_cloderia_helion_client_shared_model_Accountingperiod();
    et_com_cloderia_helion_client_shared_model_Accountingperiod.addSubtype(et_com_cloderia_helion_client_shared_model_Accountingperiod);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Accountingperiod);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Productcategory
    // **
    et_com_cloderia_helion_client_shared_model_Productcategory = createEntityType_com_cloderia_helion_client_shared_model_Productcategory();
    et_com_cloderia_helion_client_shared_model_Productcategory.addSubtype(et_com_cloderia_helion_client_shared_model_Productcategory);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Productcategory);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Productfeature
    // **
    et_com_cloderia_helion_client_shared_model_Productfeature = createEntityType_com_cloderia_helion_client_shared_model_Productfeature();
    et_com_cloderia_helion_client_shared_model_Productfeature.addSubtype(et_com_cloderia_helion_client_shared_model_Productfeature);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Productfeature);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementitemtype
    // **
    et_com_cloderia_helion_client_shared_model_Agreementitemtype = createEntityType_com_cloderia_helion_client_shared_model_Agreementitemtype();
    et_com_cloderia_helion_client_shared_model_Agreementitemtype.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementitemtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementitemtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budgetitem
    // **
    et_com_cloderia_helion_client_shared_model_Budgetitem = createEntityType_com_cloderia_helion_client_shared_model_Budgetitem();
    et_com_cloderia_helion_client_shared_model_Budgetitem.addSubtype(et_com_cloderia_helion_client_shared_model_Budgetitem);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budgetitem);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoiceroletype
    // **
    et_com_cloderia_helion_client_shared_model_Invoiceroletype = createEntityType_com_cloderia_helion_client_shared_model_Invoiceroletype();
    et_com_cloderia_helion_client_shared_model_Invoiceroletype.addSubtype(et_com_cloderia_helion_client_shared_model_Invoiceroletype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoiceroletype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Uomconversion
    // **
    et_com_cloderia_helion_client_shared_model_Uomconversion = createEntityType_com_cloderia_helion_client_shared_model_Uomconversion();
    et_com_cloderia_helion_client_shared_model_Uomconversion.addSubtype(et_com_cloderia_helion_client_shared_model_Uomconversion);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Uomconversion);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Organizationglaccountbalance
    // **
    et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance = createEntityType_com_cloderia_helion_client_shared_model_Organizationglaccountbalance();
    et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance.addSubtype(et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Organizationglaccountbalance);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budgetstatustype
    // **
    et_com_cloderia_helion_client_shared_model_Budgetstatustype = createEntityType_com_cloderia_helion_client_shared_model_Budgetstatustype();
    et_com_cloderia_helion_client_shared_model_Budgetstatustype.addSubtype(et_com_cloderia_helion_client_shared_model_Budgetstatustype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budgetstatustype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Preferencetype
    // **
    et_com_cloderia_helion_client_shared_model_Preferencetype = createEntityType_com_cloderia_helion_client_shared_model_Preferencetype();
    et_com_cloderia_helion_client_shared_model_Preferencetype.addSubtype(et_com_cloderia_helion_client_shared_model_Preferencetype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Preferencetype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Documenttype
    // **
    et_com_cloderia_helion_client_shared_model_Documenttype = createEntityType_com_cloderia_helion_client_shared_model_Documenttype();
    et_com_cloderia_helion_client_shared_model_Documenttype.addSubtype(et_com_cloderia_helion_client_shared_model_Documenttype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Documenttype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Inventoryitemtype
    // **
    et_com_cloderia_helion_client_shared_model_Inventoryitemtype = createEntityType_com_cloderia_helion_client_shared_model_Inventoryitemtype();
    et_com_cloderia_helion_client_shared_model_Inventoryitemtype.addSubtype(et_com_cloderia_helion_client_shared_model_Inventoryitemtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Inventoryitemtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Facilitytype
    // **
    et_com_cloderia_helion_client_shared_model_Facilitytype = createEntityType_com_cloderia_helion_client_shared_model_Facilitytype();
    et_com_cloderia_helion_client_shared_model_Facilitytype.addSubtype(et_com_cloderia_helion_client_shared_model_Facilitytype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Facilitytype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccountrole
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccountrole = createEntityType_com_cloderia_helion_client_shared_model_Financialaccountrole();
    et_com_cloderia_helion_client_shared_model_Financialaccountrole.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccountrole);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccountrole);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budgettype
    // **
    et_com_cloderia_helion_client_shared_model_Budgettype = createEntityType_com_cloderia_helion_client_shared_model_Budgettype();
    et_com_cloderia_helion_client_shared_model_Budgettype.addSubtype(et_com_cloderia_helion_client_shared_model_Budgettype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budgettype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Uom
    // **
    et_com_cloderia_helion_client_shared_model_Uom = createEntityType_com_cloderia_helion_client_shared_model_Uom();
    et_com_cloderia_helion_client_shared_model_Uom.addSubtype(et_com_cloderia_helion_client_shared_model_Uom);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Uom);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Containertype
    // **
    et_com_cloderia_helion_client_shared_model_Containertype = createEntityType_com_cloderia_helion_client_shared_model_Containertype();
    et_com_cloderia_helion_client_shared_model_Containertype.addSubtype(et_com_cloderia_helion_client_shared_model_Containertype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Containertype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Lot
    // **
    et_com_cloderia_helion_client_shared_model_Lot = createEntityType_com_cloderia_helion_client_shared_model_Lot();
    et_com_cloderia_helion_client_shared_model_Lot.addSubtype(et_com_cloderia_helion_client_shared_model_Lot);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Lot);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Billingaccount
    // **
    et_com_cloderia_helion_client_shared_model_Billingaccount = createEntityType_com_cloderia_helion_client_shared_model_Billingaccount();
    et_com_cloderia_helion_client_shared_model_Billingaccount.addSubtype(et_com_cloderia_helion_client_shared_model_Billingaccount);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Billingaccount);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partyroletype
    // **
    et_com_cloderia_helion_client_shared_model_Partyroletype = createEntityType_com_cloderia_helion_client_shared_model_Partyroletype();
    et_com_cloderia_helion_client_shared_model_Partyroletype.addSubtype(et_com_cloderia_helion_client_shared_model_Partyroletype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partyroletype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partycategory
    // **
    et_com_cloderia_helion_client_shared_model_Partycategory = createEntityType_com_cloderia_helion_client_shared_model_Partycategory();
    et_com_cloderia_helion_client_shared_model_Partycategory.addSubtype(et_com_cloderia_helion_client_shared_model_Partycategory);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partycategory);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoiceitem
    // **
    et_com_cloderia_helion_client_shared_model_Invoiceitem = createEntityType_com_cloderia_helion_client_shared_model_Invoiceitem();
    et_com_cloderia_helion_client_shared_model_Invoiceitem.addSubtype(et_com_cloderia_helion_client_shared_model_Invoiceitem);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoiceitem);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementtype
    // **
    et_com_cloderia_helion_client_shared_model_Agreementtype = createEntityType_com_cloderia_helion_client_shared_model_Agreementtype();
    et_com_cloderia_helion_client_shared_model_Agreementtype.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Product
    // **
    et_com_cloderia_helion_client_shared_model_Product = createEntityType_com_cloderia_helion_client_shared_model_Product();
    et_com_cloderia_helion_client_shared_model_Product.addSubtype(et_com_cloderia_helion_client_shared_model_Product);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Product);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Fixedassetdepreciationmethod
    // **
    et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod = createEntityType_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod();
    et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod.addSubtype(et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Fixedassetdepreciationmethod);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccounttype
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccounttype = createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttype();
    et_com_cloderia_helion_client_shared_model_Financialaccounttype.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccounttype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccounttype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Person
    // **
    et_com_cloderia_helion_client_shared_model_Person = createEntityType_com_cloderia_helion_client_shared_model_Person();
    et_com_cloderia_helion_client_shared_model_Person.addSubtype(et_com_cloderia_helion_client_shared_model_Person);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Person);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Container
    // **
    et_com_cloderia_helion_client_shared_model_Container = createEntityType_com_cloderia_helion_client_shared_model_Container();
    et_com_cloderia_helion_client_shared_model_Container.addSubtype(et_com_cloderia_helion_client_shared_model_Container);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Container);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Depreciationmethod
    // **
    et_com_cloderia_helion_client_shared_model_Depreciationmethod = createEntityType_com_cloderia_helion_client_shared_model_Depreciationmethod();
    et_com_cloderia_helion_client_shared_model_Depreciationmethod.addSubtype(et_com_cloderia_helion_client_shared_model_Depreciationmethod);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Depreciationmethod);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partyrelationship
    // **
    et_com_cloderia_helion_client_shared_model_Partyrelationship = createEntityType_com_cloderia_helion_client_shared_model_Partyrelationship();
    et_com_cloderia_helion_client_shared_model_Partyrelationship.addSubtype(et_com_cloderia_helion_client_shared_model_Partyrelationship);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partyrelationship);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Systemuser
    // **
    et_com_cloderia_helion_client_shared_model_Systemuser = createEntityType_com_cloderia_helion_client_shared_model_Systemuser();
    et_com_cloderia_helion_client_shared_model_Systemuser.addSubtype(et_com_cloderia_helion_client_shared_model_Systemuser);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Systemuser);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Facility
    // **
    et_com_cloderia_helion_client_shared_model_Facility = createEntityType_com_cloderia_helion_client_shared_model_Facility();
    et_com_cloderia_helion_client_shared_model_Facility.addSubtype(et_com_cloderia_helion_client_shared_model_Facility);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Facility);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Glbudgetxref
    // **
    et_com_cloderia_helion_client_shared_model_Glbudgetxref = createEntityType_com_cloderia_helion_client_shared_model_Glbudgetxref();
    et_com_cloderia_helion_client_shared_model_Glbudgetxref.addSubtype(et_com_cloderia_helion_client_shared_model_Glbudgetxref);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Glbudgetxref);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budgetstatus
    // **
    et_com_cloderia_helion_client_shared_model_Budgetstatus = createEntityType_com_cloderia_helion_client_shared_model_Budgetstatus();
    et_com_cloderia_helion_client_shared_model_Budgetstatus.addSubtype(et_com_cloderia_helion_client_shared_model_Budgetstatus);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budgetstatus);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partyrole
    // **
    et_com_cloderia_helion_client_shared_model_Partyrole = createEntityType_com_cloderia_helion_client_shared_model_Partyrole();
    et_com_cloderia_helion_client_shared_model_Partyrole.addSubtype(et_com_cloderia_helion_client_shared_model_Partyrole);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partyrole);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementterm
    // **
    et_com_cloderia_helion_client_shared_model_Agreementterm = createEntityType_com_cloderia_helion_client_shared_model_Agreementterm();
    et_com_cloderia_helion_client_shared_model_Agreementterm.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementterm);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementterm);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Productfeaturecategory
    // **
    et_com_cloderia_helion_client_shared_model_Productfeaturecategory = createEntityType_com_cloderia_helion_client_shared_model_Productfeaturecategory();
    et_com_cloderia_helion_client_shared_model_Productfeaturecategory.addSubtype(et_com_cloderia_helion_client_shared_model_Productfeaturecategory);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Productfeaturecategory);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementrole
    // **
    et_com_cloderia_helion_client_shared_model_Agreementrole = createEntityType_com_cloderia_helion_client_shared_model_Agreementrole();
    et_com_cloderia_helion_client_shared_model_Agreementrole.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementrole);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementrole);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Supplierproduct
    // **
    et_com_cloderia_helion_client_shared_model_Supplierproduct = createEntityType_com_cloderia_helion_client_shared_model_Supplierproduct();
    et_com_cloderia_helion_client_shared_model_Supplierproduct.addSubtype(et_com_cloderia_helion_client_shared_model_Supplierproduct);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Supplierproduct);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccountroletype
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccountroletype = createEntityType_com_cloderia_helion_client_shared_model_Financialaccountroletype();
    et_com_cloderia_helion_client_shared_model_Financialaccountroletype.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccountroletype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccountroletype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccount
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccount = createEntityType_com_cloderia_helion_client_shared_model_Financialaccount();
    et_com_cloderia_helion_client_shared_model_Financialaccount.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccount);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccount);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Contactmechanismpurposetype
    // **
    et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype = createEntityType_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype();
    et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype.addSubtype(et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Contactmechanismpurposetype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Paymenttype
    // **
    et_com_cloderia_helion_client_shared_model_Paymenttype = createEntityType_com_cloderia_helion_client_shared_model_Paymenttype();
    et_com_cloderia_helion_client_shared_model_Paymenttype.addSubtype(et_com_cloderia_helion_client_shared_model_Paymenttype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Paymenttype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoicestatus
    // **
    et_com_cloderia_helion_client_shared_model_Invoicestatus = createEntityType_com_cloderia_helion_client_shared_model_Invoicestatus();
    et_com_cloderia_helion_client_shared_model_Invoicestatus.addSubtype(et_com_cloderia_helion_client_shared_model_Invoicestatus);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoicestatus);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Party
    // **
    et_com_cloderia_helion_client_shared_model_Party = createEntityType_com_cloderia_helion_client_shared_model_Party();
    et_com_cloderia_helion_client_shared_model_Party.addSubtype(et_com_cloderia_helion_client_shared_model_Party);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Party);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoice
    // **
    et_com_cloderia_helion_client_shared_model_Invoice = createEntityType_com_cloderia_helion_client_shared_model_Invoice();
    et_com_cloderia_helion_client_shared_model_Invoice.addSubtype(et_com_cloderia_helion_client_shared_model_Invoice);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoice);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Fixedasset
    // **
    et_com_cloderia_helion_client_shared_model_Fixedasset = createEntityType_com_cloderia_helion_client_shared_model_Fixedasset();
    et_com_cloderia_helion_client_shared_model_Fixedasset.addSubtype(et_com_cloderia_helion_client_shared_model_Fixedasset);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Fixedasset);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoiceterm
    // **
    et_com_cloderia_helion_client_shared_model_Invoiceterm = createEntityType_com_cloderia_helion_client_shared_model_Invoiceterm();
    et_com_cloderia_helion_client_shared_model_Invoiceterm.addSubtype(et_com_cloderia_helion_client_shared_model_Invoiceterm);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoiceterm);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementroletype
    // **
    et_com_cloderia_helion_client_shared_model_Agreementroletype = createEntityType_com_cloderia_helion_client_shared_model_Agreementroletype();
    et_com_cloderia_helion_client_shared_model_Agreementroletype.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementroletype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementroletype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Generalledgeraccounttype
    // **
    et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype = createEntityType_com_cloderia_helion_client_shared_model_Generalledgeraccounttype();
    et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype.addSubtype(et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Generalledgeraccounttype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccounttransaction
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccounttransaction = createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttransaction();
    et_com_cloderia_helion_client_shared_model_Financialaccounttransaction.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccounttransaction);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccounttransaction);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Geoboundry
    // **
    et_com_cloderia_helion_client_shared_model_Geoboundry = createEntityType_com_cloderia_helion_client_shared_model_Geoboundry();
    et_com_cloderia_helion_client_shared_model_Geoboundry.addSubtype(et_com_cloderia_helion_client_shared_model_Geoboundry);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Geoboundry);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Organization
    // **
    et_com_cloderia_helion_client_shared_model_Organization = createEntityType_com_cloderia_helion_client_shared_model_Organization();
    et_com_cloderia_helion_client_shared_model_Organization.addSubtype(et_com_cloderia_helion_client_shared_model_Organization);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Organization);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Generalledgeraccount
    // **
    et_com_cloderia_helion_client_shared_model_Generalledgeraccount = createEntityType_com_cloderia_helion_client_shared_model_Generalledgeraccount();
    et_com_cloderia_helion_client_shared_model_Generalledgeraccount.addSubtype(et_com_cloderia_helion_client_shared_model_Generalledgeraccount);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Generalledgeraccount);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Producttype
    // **
    et_com_cloderia_helion_client_shared_model_Producttype = createEntityType_com_cloderia_helion_client_shared_model_Producttype();
    et_com_cloderia_helion_client_shared_model_Producttype.addSubtype(et_com_cloderia_helion_client_shared_model_Producttype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Producttype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Terminationtype
    // **
    et_com_cloderia_helion_client_shared_model_Terminationtype = createEntityType_com_cloderia_helion_client_shared_model_Terminationtype();
    et_com_cloderia_helion_client_shared_model_Terminationtype.addSubtype(et_com_cloderia_helion_client_shared_model_Terminationtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Terminationtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Paymentapplication
    // **
    et_com_cloderia_helion_client_shared_model_Paymentapplication = createEntityType_com_cloderia_helion_client_shared_model_Paymentapplication();
    et_com_cloderia_helion_client_shared_model_Paymentapplication.addSubtype(et_com_cloderia_helion_client_shared_model_Paymentapplication);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Paymentapplication);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partyrelationshipstatus
    // **
    et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus = createEntityType_com_cloderia_helion_client_shared_model_Partyrelationshipstatus();
    et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus.addSubtype(et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partyrelationshipstatus);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoicestatustype
    // **
    et_com_cloderia_helion_client_shared_model_Invoicestatustype = createEntityType_com_cloderia_helion_client_shared_model_Invoicestatustype();
    et_com_cloderia_helion_client_shared_model_Invoicestatustype.addSubtype(et_com_cloderia_helion_client_shared_model_Invoicestatustype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoicestatustype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Accountingtransactiondetail
    // **
    et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail = createEntityType_com_cloderia_helion_client_shared_model_Accountingtransactiondetail();
    et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail.addSubtype(et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Accountingtransactiondetail);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Budgetitemtype
    // **
    et_com_cloderia_helion_client_shared_model_Budgetitemtype = createEntityType_com_cloderia_helion_client_shared_model_Budgetitemtype();
    et_com_cloderia_helion_client_shared_model_Budgetitemtype.addSubtype(et_com_cloderia_helion_client_shared_model_Budgetitemtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Budgetitemtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Inventoryitemstatus
    // **
    et_com_cloderia_helion_client_shared_model_Inventoryitemstatus = createEntityType_com_cloderia_helion_client_shared_model_Inventoryitemstatus();
    et_com_cloderia_helion_client_shared_model_Inventoryitemstatus.addSubtype(et_com_cloderia_helion_client_shared_model_Inventoryitemstatus);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Inventoryitemstatus);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Standardtimeperiod
    // **
    et_com_cloderia_helion_client_shared_model_Standardtimeperiod = createEntityType_com_cloderia_helion_client_shared_model_Standardtimeperiod();
    et_com_cloderia_helion_client_shared_model_Standardtimeperiod.addSubtype(et_com_cloderia_helion_client_shared_model_Standardtimeperiod);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Standardtimeperiod);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Ratingtype
    // **
    et_com_cloderia_helion_client_shared_model_Ratingtype = createEntityType_com_cloderia_helion_client_shared_model_Ratingtype();
    et_com_cloderia_helion_client_shared_model_Ratingtype.addSubtype(et_com_cloderia_helion_client_shared_model_Ratingtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Ratingtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Accountingtransaction
    // **
    et_com_cloderia_helion_client_shared_model_Accountingtransaction = createEntityType_com_cloderia_helion_client_shared_model_Accountingtransaction();
    et_com_cloderia_helion_client_shared_model_Accountingtransaction.addSubtype(et_com_cloderia_helion_client_shared_model_Accountingtransaction);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Accountingtransaction);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Productfeaturetype
    // **
    et_com_cloderia_helion_client_shared_model_Productfeaturetype = createEntityType_com_cloderia_helion_client_shared_model_Productfeaturetype();
    et_com_cloderia_helion_client_shared_model_Productfeaturetype.addSubtype(et_com_cloderia_helion_client_shared_model_Productfeaturetype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Productfeaturetype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Periodtype
    // **
    et_com_cloderia_helion_client_shared_model_Periodtype = createEntityType_com_cloderia_helion_client_shared_model_Periodtype();
    et_com_cloderia_helion_client_shared_model_Periodtype.addSubtype(et_com_cloderia_helion_client_shared_model_Periodtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Periodtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Productcategorytype
    // **
    et_com_cloderia_helion_client_shared_model_Productcategorytype = createEntityType_com_cloderia_helion_client_shared_model_Productcategorytype();
    et_com_cloderia_helion_client_shared_model_Productcategorytype.addSubtype(et_com_cloderia_helion_client_shared_model_Productcategorytype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Productcategorytype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Agreementitem
    // **
    et_com_cloderia_helion_client_shared_model_Agreementitem = createEntityType_com_cloderia_helion_client_shared_model_Agreementitem();
    et_com_cloderia_helion_client_shared_model_Agreementitem.addSubtype(et_com_cloderia_helion_client_shared_model_Agreementitem);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Agreementitem);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Financialaccounttransactiontype
    // **
    et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype = createEntityType_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype();
    et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype.addSubtype(et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Financialaccounttransactiontype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partytype
    // **
    et_com_cloderia_helion_client_shared_model_Partytype = createEntityType_com_cloderia_helion_client_shared_model_Partytype();
    et_com_cloderia_helion_client_shared_model_Partytype.addSubtype(et_com_cloderia_helion_client_shared_model_Partytype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partytype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Contactmechanism
    // **
    et_com_cloderia_helion_client_shared_model_Contactmechanism = createEntityType_com_cloderia_helion_client_shared_model_Contactmechanism();
    et_com_cloderia_helion_client_shared_model_Contactmechanism.addSubtype(et_com_cloderia_helion_client_shared_model_Contactmechanism);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Contactmechanism);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Document
    // **
    et_com_cloderia_helion_client_shared_model_Document = createEntityType_com_cloderia_helion_client_shared_model_Document();
    et_com_cloderia_helion_client_shared_model_Document.addSubtype(et_com_cloderia_helion_client_shared_model_Document);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Document);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Termtype
    // **
    et_com_cloderia_helion_client_shared_model_Termtype = createEntityType_com_cloderia_helion_client_shared_model_Termtype();
    et_com_cloderia_helion_client_shared_model_Termtype.addSubtype(et_com_cloderia_helion_client_shared_model_Termtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Termtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Payment
    // **
    et_com_cloderia_helion_client_shared_model_Payment = createEntityType_com_cloderia_helion_client_shared_model_Payment();
    et_com_cloderia_helion_client_shared_model_Payment.addSubtype(et_com_cloderia_helion_client_shared_model_Payment);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Payment);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Accountingtransactiontype
    // **
    et_com_cloderia_helion_client_shared_model_Accountingtransactiontype = createEntityType_com_cloderia_helion_client_shared_model_Accountingtransactiontype();
    et_com_cloderia_helion_client_shared_model_Accountingtransactiontype.addSubtype(et_com_cloderia_helion_client_shared_model_Accountingtransactiontype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Accountingtransactiontype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Geoboundrytype
    // **
    et_com_cloderia_helion_client_shared_model_Geoboundrytype = createEntityType_com_cloderia_helion_client_shared_model_Geoboundrytype();
    et_com_cloderia_helion_client_shared_model_Geoboundrytype.addSubtype(et_com_cloderia_helion_client_shared_model_Geoboundrytype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Geoboundrytype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Organizationgeneralledgeraccount
    // **
    et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount = createEntityType_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount();
    et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount.addSubtype(et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Organizationgeneralledgeraccount);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Terminationreason
    // **
    et_com_cloderia_helion_client_shared_model_Terminationreason = createEntityType_com_cloderia_helion_client_shared_model_Terminationreason();
    et_com_cloderia_helion_client_shared_model_Terminationreason.addSubtype(et_com_cloderia_helion_client_shared_model_Terminationreason);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Terminationreason);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Fixedassettype
    // **
    et_com_cloderia_helion_client_shared_model_Fixedassettype = createEntityType_com_cloderia_helion_client_shared_model_Fixedassettype();
    et_com_cloderia_helion_client_shared_model_Fixedassettype.addSubtype(et_com_cloderia_helion_client_shared_model_Fixedassettype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Fixedassettype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Paymentmethodtype
    // **
    et_com_cloderia_helion_client_shared_model_Paymentmethodtype = createEntityType_com_cloderia_helion_client_shared_model_Paymentmethodtype();
    et_com_cloderia_helion_client_shared_model_Paymentmethodtype.addSubtype(et_com_cloderia_helion_client_shared_model_Paymentmethodtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Paymentmethodtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Invoiceitemtype
    // **
    et_com_cloderia_helion_client_shared_model_Invoiceitemtype = createEntityType_com_cloderia_helion_client_shared_model_Invoiceitemtype();
    et_com_cloderia_helion_client_shared_model_Invoiceitemtype.addSubtype(et_com_cloderia_helion_client_shared_model_Invoiceitemtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Invoiceitemtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Contactmechanismtype
    // **
    et_com_cloderia_helion_client_shared_model_Contactmechanismtype = createEntityType_com_cloderia_helion_client_shared_model_Contactmechanismtype();
    et_com_cloderia_helion_client_shared_model_Contactmechanismtype.addSubtype(et_com_cloderia_helion_client_shared_model_Contactmechanismtype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Contactmechanismtype);
    // **
    // ** EntityType for com.cloderia.helion.client.shared.model.Partyrelationshiptype
    // **
    et_com_cloderia_helion_client_shared_model_Partyrelationshiptype = createEntityType_com_cloderia_helion_client_shared_model_Partyrelationshiptype();
    et_com_cloderia_helion_client_shared_model_Partyrelationshiptype.addSubtype(et_com_cloderia_helion_client_shared_model_Partyrelationshiptype);
    metamodel.addEntityType(et_com_cloderia_helion_client_shared_model_Partyrelationshiptype);
    metamodel.freeze();
    return metamodel;
  }

  protected Map createNamedQueries() {
    final Map namedQueries = new HashMap();
    // **
    // ** NamedQuery "allDocuments"
    // ** SELECT e FROM Document e ORDER BY e.id
    // **
    namedQueries.put("allDocuments", new TypedQueryFactory(Document.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Document.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Document lhs = (Document) o1;
                final Document rhs = (Document) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findDocumentsByCode"
    // ** SELECT e FROM Document e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findDocumentsByCode", new TypedQueryFactory(Document.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Document.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Document lhs = (Document) o1;
                final Document rhs = (Document) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoicestatuss"
    // ** SELECT e FROM Invoicestatus e ORDER BY e.id
    // **
    namedQueries.put("allInvoicestatuss", new TypedQueryFactory(Invoicestatus.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoicestatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoicestatus lhs = (Invoicestatus) o1;
                final Invoicestatus rhs = (Invoicestatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoicestatussByCode"
    // ** SELECT e FROM Invoicestatus e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoicestatussByCode", new TypedQueryFactory(Invoicestatus.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoicestatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoicestatus lhs = (Invoicestatus) o1;
                final Invoicestatus rhs = (Invoicestatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgets"
    // ** SELECT e FROM Budget e ORDER BY e.id
    // **
    namedQueries.put("allBudgets", new TypedQueryFactory(Budget.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budget.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budget lhs = (Budget) o1;
                final Budget rhs = (Budget) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgetsByCode"
    // ** SELECT e FROM Budget e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgetsByCode", new TypedQueryFactory(Budget.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budget.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budget lhs = (Budget) o1;
                final Budget rhs = (Budget) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartyrelationships"
    // ** SELECT e FROM Partyrelationship e ORDER BY e.id
    // **
    namedQueries.put("allPartyrelationships", new TypedQueryFactory(Partyrelationship.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationship.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationship lhs = (Partyrelationship) o1;
                final Partyrelationship rhs = (Partyrelationship) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartyrelationshipsByCode"
    // ** SELECT e FROM Partyrelationship e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartyrelationshipsByCode", new TypedQueryFactory(Partyrelationship.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationship.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationship lhs = (Partyrelationship) o1;
                final Partyrelationship rhs = (Partyrelationship) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccountroles"
    // ** SELECT e FROM Financialaccountrole e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccountroles", new TypedQueryFactory(Financialaccountrole.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccountrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccountrole lhs = (Financialaccountrole) o1;
                final Financialaccountrole rhs = (Financialaccountrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccountrolesByCode"
    // ** SELECT e FROM Financialaccountrole e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccountrolesByCode", new TypedQueryFactory(Financialaccountrole.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccountrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccountrole lhs = (Financialaccountrole) o1;
                final Financialaccountrole rhs = (Financialaccountrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAccountingtransactiontypes"
    // ** SELECT e FROM Accountingtransactiontype e ORDER BY e.id
    // **
    namedQueries.put("allAccountingtransactiontypes", new TypedQueryFactory(Accountingtransactiontype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransactiontype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransactiontype lhs = (Accountingtransactiontype) o1;
                final Accountingtransactiontype rhs = (Accountingtransactiontype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAccountingtransactiontypesByCode"
    // ** SELECT e FROM Accountingtransactiontype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAccountingtransactiontypesByCode", new TypedQueryFactory(Accountingtransactiontype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransactiontype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransactiontype lhs = (Accountingtransactiontype) o1;
                final Accountingtransactiontype rhs = (Accountingtransactiontype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allContactmechanisms"
    // ** SELECT e FROM Contactmechanism e ORDER BY e.id
    // **
    namedQueries.put("allContactmechanisms", new TypedQueryFactory(Contactmechanism.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanism.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanism lhs = (Contactmechanism) o1;
                final Contactmechanism rhs = (Contactmechanism) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findContactmechanismsByCode"
    // ** SELECT e FROM Contactmechanism e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findContactmechanismsByCode", new TypedQueryFactory(Contactmechanism.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanism.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanism lhs = (Contactmechanism) o1;
                final Contactmechanism rhs = (Contactmechanism) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgettypes"
    // ** SELECT e FROM Budgettype e ORDER BY e.id
    // **
    namedQueries.put("allBudgettypes", new TypedQueryFactory(Budgettype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgettype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgettype lhs = (Budgettype) o1;
                final Budgettype rhs = (Budgettype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgettypesByCode"
    // ** SELECT e FROM Budgettype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgettypesByCode", new TypedQueryFactory(Budgettype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgettype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgettype lhs = (Budgettype) o1;
                final Budgettype rhs = (Budgettype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementroles"
    // ** SELECT e FROM Agreementrole e ORDER BY e.id
    // **
    namedQueries.put("allAgreementroles", new TypedQueryFactory(Agreementrole.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementrole lhs = (Agreementrole) o1;
                final Agreementrole rhs = (Agreementrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementrolesByCode"
    // ** SELECT e FROM Agreementrole e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementrolesByCode", new TypedQueryFactory(Agreementrole.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementrole lhs = (Agreementrole) o1;
                final Agreementrole rhs = (Agreementrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreements"
    // ** SELECT e FROM Agreement e ORDER BY e.id
    // **
    namedQueries.put("allAgreements", new TypedQueryFactory(Agreement.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreement.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreement lhs = (Agreement) o1;
                final Agreement rhs = (Agreement) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementsByCode"
    // ** SELECT e FROM Agreement e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementsByCode", new TypedQueryFactory(Agreement.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreement.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreement lhs = (Agreement) o1;
                final Agreement rhs = (Agreement) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProducts"
    // ** SELECT e FROM Product e ORDER BY e.id
    // **
    namedQueries.put("allProducts", new TypedQueryFactory(Product.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Product.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Product lhs = (Product) o1;
                final Product rhs = (Product) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductsByCode"
    // ** SELECT e FROM Product e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductsByCode", new TypedQueryFactory(Product.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Product.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Product lhs = (Product) o1;
                final Product rhs = (Product) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFixedassettypes"
    // ** SELECT e FROM Fixedassettype e ORDER BY e.id
    // **
    namedQueries.put("allFixedassettypes", new TypedQueryFactory(Fixedassettype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedassettype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedassettype lhs = (Fixedassettype) o1;
                final Fixedassettype rhs = (Fixedassettype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFixedassettypesByCode"
    // ** SELECT e FROM Fixedassettype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFixedassettypesByCode", new TypedQueryFactory(Fixedassettype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedassettype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedassettype lhs = (Fixedassettype) o1;
                final Fixedassettype rhs = (Fixedassettype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInventoryitemstatuss"
    // ** SELECT e FROM Inventoryitemstatus e ORDER BY e.id
    // **
    namedQueries.put("allInventoryitemstatuss", new TypedQueryFactory(Inventoryitemstatus.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitemstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitemstatus lhs = (Inventoryitemstatus) o1;
                final Inventoryitemstatus rhs = (Inventoryitemstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInventoryitemstatussByCode"
    // ** SELECT e FROM Inventoryitemstatus e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInventoryitemstatussByCode", new TypedQueryFactory(Inventoryitemstatus.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitemstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitemstatus lhs = (Inventoryitemstatus) o1;
                final Inventoryitemstatus rhs = (Inventoryitemstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartyrelationshipstatuss"
    // ** SELECT e FROM Partyrelationshipstatus e ORDER BY e.id
    // **
    namedQueries.put("allPartyrelationshipstatuss", new TypedQueryFactory(Partyrelationshipstatus.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationshipstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationshipstatus lhs = (Partyrelationshipstatus) o1;
                final Partyrelationshipstatus rhs = (Partyrelationshipstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartyrelationshipstatussByCode"
    // ** SELECT e FROM Partyrelationshipstatus e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartyrelationshipstatussByCode", new TypedQueryFactory(Partyrelationshipstatus.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationshipstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationshipstatus lhs = (Partyrelationshipstatus) o1;
                final Partyrelationshipstatus rhs = (Partyrelationshipstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allUniverses"
    // ** SELECT e FROM Universe e ORDER BY e.id
    // **
    namedQueries.put("allUniverses", new TypedQueryFactory(Universe.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Universe.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Universe lhs = (Universe) o1;
                final Universe rhs = (Universe) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findUniversesByCode"
    // ** SELECT e FROM Universe e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findUniversesByCode", new TypedQueryFactory(Universe.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Universe.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Universe lhs = (Universe) o1;
                final Universe rhs = (Universe) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPersons"
    // ** SELECT e FROM Person e ORDER BY e.id
    // **
    namedQueries.put("allPersons", new TypedQueryFactory(Person.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Person.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Person lhs = (Person) o1;
                final Person rhs = (Person) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPersonsByCode"
    // ** SELECT e FROM Person e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPersonsByCode", new TypedQueryFactory(Person.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Person.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Person lhs = (Person) o1;
                final Person rhs = (Person) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFacilitytypes"
    // ** SELECT e FROM Facilitytype e ORDER BY e.id
    // **
    namedQueries.put("allFacilitytypes", new TypedQueryFactory(Facilitytype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Facilitytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Facilitytype lhs = (Facilitytype) o1;
                final Facilitytype rhs = (Facilitytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFacilitytypesByCode"
    // ** SELECT e FROM Facilitytype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFacilitytypesByCode", new TypedQueryFactory(Facilitytype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Facilitytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Facilitytype lhs = (Facilitytype) o1;
                final Facilitytype rhs = (Facilitytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementroletypes"
    // ** SELECT e FROM Agreementroletype e ORDER BY e.id
    // **
    namedQueries.put("allAgreementroletypes", new TypedQueryFactory(Agreementroletype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementroletype lhs = (Agreementroletype) o1;
                final Agreementroletype rhs = (Agreementroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementroletypesByCode"
    // ** SELECT e FROM Agreementroletype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementroletypesByCode", new TypedQueryFactory(Agreementroletype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementroletype lhs = (Agreementroletype) o1;
                final Agreementroletype rhs = (Agreementroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementitemtypes"
    // ** SELECT e FROM Agreementitemtype e ORDER BY e.id
    // **
    namedQueries.put("allAgreementitemtypes", new TypedQueryFactory(Agreementitemtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementitemtype lhs = (Agreementitemtype) o1;
                final Agreementitemtype rhs = (Agreementitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementitemtypesByCode"
    // ** SELECT e FROM Agreementitemtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementitemtypesByCode", new TypedQueryFactory(Agreementitemtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementitemtype lhs = (Agreementitemtype) o1;
                final Agreementitemtype rhs = (Agreementitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allContactmechanismtypes"
    // ** SELECT e FROM Contactmechanismtype e ORDER BY e.id
    // **
    namedQueries.put("allContactmechanismtypes", new TypedQueryFactory(Contactmechanismtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanismtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanismtype lhs = (Contactmechanismtype) o1;
                final Contactmechanismtype rhs = (Contactmechanismtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findContactmechanismtypesByCode"
    // ** SELECT e FROM Contactmechanismtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findContactmechanismtypesByCode", new TypedQueryFactory(Contactmechanismtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanismtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanismtype lhs = (Contactmechanismtype) o1;
                final Contactmechanismtype rhs = (Contactmechanismtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProductcategorytypes"
    // ** SELECT e FROM Productcategorytype e ORDER BY e.id
    // **
    namedQueries.put("allProductcategorytypes", new TypedQueryFactory(Productcategorytype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productcategorytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productcategorytype lhs = (Productcategorytype) o1;
                final Productcategorytype rhs = (Productcategorytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductcategorytypesByCode"
    // ** SELECT e FROM Productcategorytype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductcategorytypesByCode", new TypedQueryFactory(Productcategorytype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productcategorytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productcategorytype lhs = (Productcategorytype) o1;
                final Productcategorytype rhs = (Productcategorytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementtypes"
    // ** SELECT e FROM Agreementtype e ORDER BY e.id
    // **
    namedQueries.put("allAgreementtypes", new TypedQueryFactory(Agreementtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementtype lhs = (Agreementtype) o1;
                final Agreementtype rhs = (Agreementtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementtypesByCode"
    // ** SELECT e FROM Agreementtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementtypesByCode", new TypedQueryFactory(Agreementtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementtype lhs = (Agreementtype) o1;
                final Agreementtype rhs = (Agreementtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allGeoboundrytypes"
    // ** SELECT e FROM Geoboundrytype e ORDER BY e.id
    // **
    namedQueries.put("allGeoboundrytypes", new TypedQueryFactory(Geoboundrytype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Geoboundrytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Geoboundrytype lhs = (Geoboundrytype) o1;
                final Geoboundrytype rhs = (Geoboundrytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findGeoboundrytypesByCode"
    // ** SELECT e FROM Geoboundrytype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findGeoboundrytypesByCode", new TypedQueryFactory(Geoboundrytype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Geoboundrytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Geoboundrytype lhs = (Geoboundrytype) o1;
                final Geoboundrytype rhs = (Geoboundrytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProductfeaturetypes"
    // ** SELECT e FROM Productfeaturetype e ORDER BY e.id
    // **
    namedQueries.put("allProductfeaturetypes", new TypedQueryFactory(Productfeaturetype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeaturetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeaturetype lhs = (Productfeaturetype) o1;
                final Productfeaturetype rhs = (Productfeaturetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductfeaturetypesByCode"
    // ** SELECT e FROM Productfeaturetype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductfeaturetypesByCode", new TypedQueryFactory(Productfeaturetype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeaturetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeaturetype lhs = (Productfeaturetype) o1;
                final Productfeaturetype rhs = (Productfeaturetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBillingaccounts"
    // ** SELECT e FROM Billingaccount e ORDER BY e.id
    // **
    namedQueries.put("allBillingaccounts", new TypedQueryFactory(Billingaccount.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Billingaccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Billingaccount lhs = (Billingaccount) o1;
                final Billingaccount rhs = (Billingaccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBillingaccountsByCode"
    // ** SELECT e FROM Billingaccount e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBillingaccountsByCode", new TypedQueryFactory(Billingaccount.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Billingaccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Billingaccount lhs = (Billingaccount) o1;
                final Billingaccount rhs = (Billingaccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allContainertypes"
    // ** SELECT e FROM Containertype e ORDER BY e.id
    // **
    namedQueries.put("allContainertypes", new TypedQueryFactory(Containertype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Containertype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Containertype lhs = (Containertype) o1;
                final Containertype rhs = (Containertype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findContainertypesByCode"
    // ** SELECT e FROM Containertype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findContainertypesByCode", new TypedQueryFactory(Containertype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Containertype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Containertype lhs = (Containertype) o1;
                final Containertype rhs = (Containertype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartyroletypes"
    // ** SELECT e FROM Partyroletype e ORDER BY e.id
    // **
    namedQueries.put("allPartyroletypes", new TypedQueryFactory(Partyroletype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyroletype lhs = (Partyroletype) o1;
                final Partyroletype rhs = (Partyroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartyroletypesByCode"
    // ** SELECT e FROM Partyroletype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartyroletypesByCode", new TypedQueryFactory(Partyroletype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyroletype lhs = (Partyroletype) o1;
                final Partyroletype rhs = (Partyroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allGlbudgetxrefs"
    // ** SELECT e FROM Glbudgetxref e ORDER BY e.id
    // **
    namedQueries.put("allGlbudgetxrefs", new TypedQueryFactory(Glbudgetxref.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Glbudgetxref.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Glbudgetxref lhs = (Glbudgetxref) o1;
                final Glbudgetxref rhs = (Glbudgetxref) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findGlbudgetxrefsByCode"
    // ** SELECT e FROM Glbudgetxref e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findGlbudgetxrefsByCode", new TypedQueryFactory(Glbudgetxref.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Glbudgetxref.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Glbudgetxref lhs = (Glbudgetxref) o1;
                final Glbudgetxref rhs = (Glbudgetxref) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPeriodtypes"
    // ** SELECT e FROM Periodtype e ORDER BY e.id
    // **
    namedQueries.put("allPeriodtypes", new TypedQueryFactory(Periodtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Periodtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Periodtype lhs = (Periodtype) o1;
                final Periodtype rhs = (Periodtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPeriodtypesByCode"
    // ** SELECT e FROM Periodtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPeriodtypesByCode", new TypedQueryFactory(Periodtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Periodtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Periodtype lhs = (Periodtype) o1;
                final Periodtype rhs = (Periodtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allContactmechanismpurposetypes"
    // ** SELECT e FROM Contactmechanismpurposetype e ORDER BY e.id
    // **
    namedQueries.put("allContactmechanismpurposetypes", new TypedQueryFactory(Contactmechanismpurposetype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanismpurposetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanismpurposetype lhs = (Contactmechanismpurposetype) o1;
                final Contactmechanismpurposetype rhs = (Contactmechanismpurposetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findContactmechanismpurposetypesByCode"
    // ** SELECT e FROM Contactmechanismpurposetype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findContactmechanismpurposetypesByCode", new TypedQueryFactory(Contactmechanismpurposetype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Contactmechanismpurposetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Contactmechanismpurposetype lhs = (Contactmechanismpurposetype) o1;
                final Contactmechanismpurposetype rhs = (Contactmechanismpurposetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartyroles"
    // ** SELECT e FROM Partyrole e ORDER BY e.id
    // **
    namedQueries.put("allPartyroles", new TypedQueryFactory(Partyrole.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrole lhs = (Partyrole) o1;
                final Partyrole rhs = (Partyrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartyrolesByCode"
    // ** SELECT e FROM Partyrole e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartyrolesByCode", new TypedQueryFactory(Partyrole.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrole.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrole lhs = (Partyrole) o1;
                final Partyrole rhs = (Partyrole) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allGeoboundrys"
    // ** SELECT e FROM Geoboundry e ORDER BY e.id
    // **
    namedQueries.put("allGeoboundrys", new TypedQueryFactory(Geoboundry.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Geoboundry.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Geoboundry lhs = (Geoboundry) o1;
                final Geoboundry rhs = (Geoboundry) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findGeoboundrysByCode"
    // ** SELECT e FROM Geoboundry e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findGeoboundrysByCode", new TypedQueryFactory(Geoboundry.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Geoboundry.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Geoboundry lhs = (Geoboundry) o1;
                final Geoboundry rhs = (Geoboundry) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgetitemtypes"
    // ** SELECT e FROM Budgetitemtype e ORDER BY e.id
    // **
    namedQueries.put("allBudgetitemtypes", new TypedQueryFactory(Budgetitemtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetitemtype lhs = (Budgetitemtype) o1;
                final Budgetitemtype rhs = (Budgetitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgetitemtypesByCode"
    // ** SELECT e FROM Budgetitemtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgetitemtypesByCode", new TypedQueryFactory(Budgetitemtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetitemtype lhs = (Budgetitemtype) o1;
                final Budgetitemtype rhs = (Budgetitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allOrganizationglaccountbalances"
    // ** SELECT e FROM Organizationglaccountbalance e ORDER BY e.id
    // **
    namedQueries.put("allOrganizationglaccountbalances", new TypedQueryFactory(Organizationglaccountbalance.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organizationglaccountbalance.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organizationglaccountbalance lhs = (Organizationglaccountbalance) o1;
                final Organizationglaccountbalance rhs = (Organizationglaccountbalance) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findOrganizationglaccountbalancesByCode"
    // ** SELECT e FROM Organizationglaccountbalance e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findOrganizationglaccountbalancesByCode", new TypedQueryFactory(Organizationglaccountbalance.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organizationglaccountbalance.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organizationglaccountbalance lhs = (Organizationglaccountbalance) o1;
                final Organizationglaccountbalance rhs = (Organizationglaccountbalance) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allStandardtimeperiods"
    // ** SELECT e FROM Standardtimeperiod e ORDER BY e.id
    // **
    namedQueries.put("allStandardtimeperiods", new TypedQueryFactory(Standardtimeperiod.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Standardtimeperiod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Standardtimeperiod lhs = (Standardtimeperiod) o1;
                final Standardtimeperiod rhs = (Standardtimeperiod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findStandardtimeperiodsByCode"
    // ** SELECT e FROM Standardtimeperiod e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findStandardtimeperiodsByCode", new TypedQueryFactory(Standardtimeperiod.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Standardtimeperiod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Standardtimeperiod lhs = (Standardtimeperiod) o1;
                final Standardtimeperiod rhs = (Standardtimeperiod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allContainers"
    // ** SELECT e FROM Container e ORDER BY e.id
    // **
    namedQueries.put("allContainers", new TypedQueryFactory(Container.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Container.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Container lhs = (Container) o1;
                final Container rhs = (Container) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findContainersByCode"
    // ** SELECT e FROM Container e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findContainersByCode", new TypedQueryFactory(Container.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Container.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Container lhs = (Container) o1;
                final Container rhs = (Container) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allRatingtypes"
    // ** SELECT e FROM Ratingtype e ORDER BY e.id
    // **
    namedQueries.put("allRatingtypes", new TypedQueryFactory(Ratingtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Ratingtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Ratingtype lhs = (Ratingtype) o1;
                final Ratingtype rhs = (Ratingtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findRatingtypesByCode"
    // ** SELECT e FROM Ratingtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findRatingtypesByCode", new TypedQueryFactory(Ratingtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Ratingtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Ratingtype lhs = (Ratingtype) o1;
                final Ratingtype rhs = (Ratingtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccountroletypes"
    // ** SELECT e FROM Financialaccountroletype e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccountroletypes", new TypedQueryFactory(Financialaccountroletype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccountroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccountroletype lhs = (Financialaccountroletype) o1;
                final Financialaccountroletype rhs = (Financialaccountroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccountroletypesByCode"
    // ** SELECT e FROM Financialaccountroletype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccountroletypesByCode", new TypedQueryFactory(Financialaccountroletype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccountroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccountroletype lhs = (Financialaccountroletype) o1;
                final Financialaccountroletype rhs = (Financialaccountroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allSystemusers"
    // ** SELECT e FROM Systemuser e ORDER BY e.id
    // **
    namedQueries.put("allSystemusers", new TypedQueryFactory(Systemuser.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Systemuser.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Systemuser lhs = (Systemuser) o1;
                final Systemuser rhs = (Systemuser) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findSystemusersByCode"
    // ** SELECT e FROM Systemuser e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findSystemusersByCode", new TypedQueryFactory(Systemuser.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Systemuser.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Systemuser lhs = (Systemuser) o1;
                final Systemuser rhs = (Systemuser) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoiceitems"
    // ** SELECT e FROM Invoiceitem e ORDER BY e.id
    // **
    namedQueries.put("allInvoiceitems", new TypedQueryFactory(Invoiceitem.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceitem lhs = (Invoiceitem) o1;
                final Invoiceitem rhs = (Invoiceitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoiceitemsByCode"
    // ** SELECT e FROM Invoiceitem e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoiceitemsByCode", new TypedQueryFactory(Invoiceitem.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceitem lhs = (Invoiceitem) o1;
                final Invoiceitem rhs = (Invoiceitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementitems"
    // ** SELECT e FROM Agreementitem e ORDER BY e.id
    // **
    namedQueries.put("allAgreementitems", new TypedQueryFactory(Agreementitem.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementitem lhs = (Agreementitem) o1;
                final Agreementitem rhs = (Agreementitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementitemsByCode"
    // ** SELECT e FROM Agreementitem e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementitemsByCode", new TypedQueryFactory(Agreementitem.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementitem lhs = (Agreementitem) o1;
                final Agreementitem rhs = (Agreementitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoiceitemtypes"
    // ** SELECT e FROM Invoiceitemtype e ORDER BY e.id
    // **
    namedQueries.put("allInvoiceitemtypes", new TypedQueryFactory(Invoiceitemtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceitemtype lhs = (Invoiceitemtype) o1;
                final Invoiceitemtype rhs = (Invoiceitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoiceitemtypesByCode"
    // ** SELECT e FROM Invoiceitemtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoiceitemtypesByCode", new TypedQueryFactory(Invoiceitemtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceitemtype lhs = (Invoiceitemtype) o1;
                final Invoiceitemtype rhs = (Invoiceitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFixedassetdepreciationmethods"
    // ** SELECT e FROM Fixedassetdepreciationmethod e ORDER BY e.id
    // **
    namedQueries.put("allFixedassetdepreciationmethods", new TypedQueryFactory(Fixedassetdepreciationmethod.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedassetdepreciationmethod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedassetdepreciationmethod lhs = (Fixedassetdepreciationmethod) o1;
                final Fixedassetdepreciationmethod rhs = (Fixedassetdepreciationmethod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFixedassetdepreciationmethodsByCode"
    // ** SELECT e FROM Fixedassetdepreciationmethod e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFixedassetdepreciationmethodsByCode", new TypedQueryFactory(Fixedassetdepreciationmethod.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedassetdepreciationmethod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedassetdepreciationmethod lhs = (Fixedassetdepreciationmethod) o1;
                final Fixedassetdepreciationmethod rhs = (Fixedassetdepreciationmethod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgetstatuss"
    // ** SELECT e FROM Budgetstatus e ORDER BY e.id
    // **
    namedQueries.put("allBudgetstatuss", new TypedQueryFactory(Budgetstatus.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetstatus lhs = (Budgetstatus) o1;
                final Budgetstatus rhs = (Budgetstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgetstatussByCode"
    // ** SELECT e FROM Budgetstatus e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgetstatussByCode", new TypedQueryFactory(Budgetstatus.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetstatus.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetstatus lhs = (Budgetstatus) o1;
                final Budgetstatus rhs = (Budgetstatus) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartys"
    // ** SELECT e FROM Party e ORDER BY e.id
    // **
    namedQueries.put("allPartys", new TypedQueryFactory(Party.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Party.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Party lhs = (Party) o1;
                final Party rhs = (Party) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartysByCode"
    // ** SELECT e FROM Party e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartysByCode", new TypedQueryFactory(Party.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Party.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Party lhs = (Party) o1;
                final Party rhs = (Party) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoiceroletypes"
    // ** SELECT e FROM Invoiceroletype e ORDER BY e.id
    // **
    namedQueries.put("allInvoiceroletypes", new TypedQueryFactory(Invoiceroletype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceroletype lhs = (Invoiceroletype) o1;
                final Invoiceroletype rhs = (Invoiceroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoiceroletypesByCode"
    // ** SELECT e FROM Invoiceroletype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoiceroletypesByCode", new TypedQueryFactory(Invoiceroletype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceroletype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceroletype lhs = (Invoiceroletype) o1;
                final Invoiceroletype rhs = (Invoiceroletype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allOrganizations"
    // ** SELECT e FROM Organization e ORDER BY e.id
    // **
    namedQueries.put("allOrganizations", new TypedQueryFactory(Organization.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organization.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organization lhs = (Organization) o1;
                final Organization rhs = (Organization) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findOrganizationsByCode"
    // ** SELECT e FROM Organization e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findOrganizationsByCode", new TypedQueryFactory(Organization.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organization.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organization lhs = (Organization) o1;
                final Organization rhs = (Organization) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFixedassets"
    // ** SELECT e FROM Fixedasset e ORDER BY e.id
    // **
    namedQueries.put("allFixedassets", new TypedQueryFactory(Fixedasset.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedasset.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedasset lhs = (Fixedasset) o1;
                final Fixedasset rhs = (Fixedasset) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFixedassetsByCode"
    // ** SELECT e FROM Fixedasset e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFixedassetsByCode", new TypedQueryFactory(Fixedasset.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Fixedasset.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Fixedasset lhs = (Fixedasset) o1;
                final Fixedasset rhs = (Fixedasset) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProductfeatures"
    // ** SELECT e FROM Productfeature e ORDER BY e.id
    // **
    namedQueries.put("allProductfeatures", new TypedQueryFactory(Productfeature.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeature.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeature lhs = (Productfeature) o1;
                final Productfeature rhs = (Productfeature) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductfeaturesByCode"
    // ** SELECT e FROM Productfeature e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductfeaturesByCode", new TypedQueryFactory(Productfeature.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeature.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeature lhs = (Productfeature) o1;
                final Productfeature rhs = (Productfeature) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccounttypes"
    // ** SELECT e FROM Financialaccounttype e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccounttypes", new TypedQueryFactory(Financialaccounttype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttype lhs = (Financialaccounttype) o1;
                final Financialaccounttype rhs = (Financialaccounttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccounttypesByCode"
    // ** SELECT e FROM Financialaccounttype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccounttypesByCode", new TypedQueryFactory(Financialaccounttype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttype lhs = (Financialaccounttype) o1;
                final Financialaccounttype rhs = (Financialaccounttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAccountingtransactiondetails"
    // ** SELECT e FROM Accountingtransactiondetail e ORDER BY e.id
    // **
    namedQueries.put("allAccountingtransactiondetails", new TypedQueryFactory(Accountingtransactiondetail.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransactiondetail.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransactiondetail lhs = (Accountingtransactiondetail) o1;
                final Accountingtransactiondetail rhs = (Accountingtransactiondetail) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAccountingtransactiondetailsByCode"
    // ** SELECT e FROM Accountingtransactiondetail e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAccountingtransactiondetailsByCode", new TypedQueryFactory(Accountingtransactiondetail.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransactiondetail.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransactiondetail lhs = (Accountingtransactiondetail) o1;
                final Accountingtransactiondetail rhs = (Accountingtransactiondetail) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInventoryitemtypes"
    // ** SELECT e FROM Inventoryitemtype e ORDER BY e.id
    // **
    namedQueries.put("allInventoryitemtypes", new TypedQueryFactory(Inventoryitemtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitemtype lhs = (Inventoryitemtype) o1;
                final Inventoryitemtype rhs = (Inventoryitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInventoryitemtypesByCode"
    // ** SELECT e FROM Inventoryitemtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInventoryitemtypesByCode", new TypedQueryFactory(Inventoryitemtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitemtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitemtype lhs = (Inventoryitemtype) o1;
                final Inventoryitemtype rhs = (Inventoryitemtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allDepreciationmethods"
    // ** SELECT e FROM Depreciationmethod e ORDER BY e.id
    // **
    namedQueries.put("allDepreciationmethods", new TypedQueryFactory(Depreciationmethod.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Depreciationmethod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Depreciationmethod lhs = (Depreciationmethod) o1;
                final Depreciationmethod rhs = (Depreciationmethod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findDepreciationmethodsByCode"
    // ** SELECT e FROM Depreciationmethod e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findDepreciationmethodsByCode", new TypedQueryFactory(Depreciationmethod.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Depreciationmethod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Depreciationmethod lhs = (Depreciationmethod) o1;
                final Depreciationmethod rhs = (Depreciationmethod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAccountingperiods"
    // ** SELECT e FROM Accountingperiod e ORDER BY e.id
    // **
    namedQueries.put("allAccountingperiods", new TypedQueryFactory(Accountingperiod.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingperiod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingperiod lhs = (Accountingperiod) o1;
                final Accountingperiod rhs = (Accountingperiod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAccountingperiodsByCode"
    // ** SELECT e FROM Accountingperiod e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAccountingperiodsByCode", new TypedQueryFactory(Accountingperiod.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingperiod.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingperiod lhs = (Accountingperiod) o1;
                final Accountingperiod rhs = (Accountingperiod) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPaymentapplications"
    // ** SELECT e FROM Paymentapplication e ORDER BY e.id
    // **
    namedQueries.put("allPaymentapplications", new TypedQueryFactory(Paymentapplication.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymentapplication.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymentapplication lhs = (Paymentapplication) o1;
                final Paymentapplication rhs = (Paymentapplication) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPaymentapplicationsByCode"
    // ** SELECT e FROM Paymentapplication e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPaymentapplicationsByCode", new TypedQueryFactory(Paymentapplication.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymentapplication.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymentapplication lhs = (Paymentapplication) o1;
                final Paymentapplication rhs = (Paymentapplication) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAgreementterms"
    // ** SELECT e FROM Agreementterm e ORDER BY e.id
    // **
    namedQueries.put("allAgreementterms", new TypedQueryFactory(Agreementterm.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementterm.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementterm lhs = (Agreementterm) o1;
                final Agreementterm rhs = (Agreementterm) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAgreementtermsByCode"
    // ** SELECT e FROM Agreementterm e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAgreementtermsByCode", new TypedQueryFactory(Agreementterm.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Agreementterm.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Agreementterm lhs = (Agreementterm) o1;
                final Agreementterm rhs = (Agreementterm) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartycategorys"
    // ** SELECT e FROM Partycategory e ORDER BY e.id
    // **
    namedQueries.put("allPartycategorys", new TypedQueryFactory(Partycategory.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partycategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partycategory lhs = (Partycategory) o1;
                final Partycategory rhs = (Partycategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartycategorysByCode"
    // ** SELECT e FROM Partycategory e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartycategorysByCode", new TypedQueryFactory(Partycategory.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partycategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partycategory lhs = (Partycategory) o1;
                final Partycategory rhs = (Partycategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allTerminationreasons"
    // ** SELECT e FROM Terminationreason e ORDER BY e.id
    // **
    namedQueries.put("allTerminationreasons", new TypedQueryFactory(Terminationreason.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Terminationreason.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Terminationreason lhs = (Terminationreason) o1;
                final Terminationreason rhs = (Terminationreason) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findTerminationreasonsByCode"
    // ** SELECT e FROM Terminationreason e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findTerminationreasonsByCode", new TypedQueryFactory(Terminationreason.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Terminationreason.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Terminationreason lhs = (Terminationreason) o1;
                final Terminationreason rhs = (Terminationreason) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgetitems"
    // ** SELECT e FROM Budgetitem e ORDER BY e.id
    // **
    namedQueries.put("allBudgetitems", new TypedQueryFactory(Budgetitem.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetitem lhs = (Budgetitem) o1;
                final Budgetitem rhs = (Budgetitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgetitemsByCode"
    // ** SELECT e FROM Budgetitem e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgetitemsByCode", new TypedQueryFactory(Budgetitem.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetitem lhs = (Budgetitem) o1;
                final Budgetitem rhs = (Budgetitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allAccountingtransactions"
    // ** SELECT e FROM Accountingtransaction e ORDER BY e.id
    // **
    namedQueries.put("allAccountingtransactions", new TypedQueryFactory(Accountingtransaction.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransaction.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransaction lhs = (Accountingtransaction) o1;
                final Accountingtransaction rhs = (Accountingtransaction) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findAccountingtransactionsByCode"
    // ** SELECT e FROM Accountingtransaction e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findAccountingtransactionsByCode", new TypedQueryFactory(Accountingtransaction.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Accountingtransaction.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Accountingtransaction lhs = (Accountingtransaction) o1;
                final Accountingtransaction rhs = (Accountingtransaction) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allTermtypes"
    // ** SELECT e FROM Termtype e ORDER BY e.id
    // **
    namedQueries.put("allTermtypes", new TypedQueryFactory(Termtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Termtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Termtype lhs = (Termtype) o1;
                final Termtype rhs = (Termtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findTermtypesByCode"
    // ** SELECT e FROM Termtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findTermtypesByCode", new TypedQueryFactory(Termtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Termtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Termtype lhs = (Termtype) o1;
                final Termtype rhs = (Termtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProductcategorys"
    // ** SELECT e FROM Productcategory e ORDER BY e.id
    // **
    namedQueries.put("allProductcategorys", new TypedQueryFactory(Productcategory.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productcategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productcategory lhs = (Productcategory) o1;
                final Productcategory rhs = (Productcategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductcategorysByCode"
    // ** SELECT e FROM Productcategory e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductcategorysByCode", new TypedQueryFactory(Productcategory.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productcategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productcategory lhs = (Productcategory) o1;
                final Productcategory rhs = (Productcategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoiceterms"
    // ** SELECT e FROM Invoiceterm e ORDER BY e.id
    // **
    namedQueries.put("allInvoiceterms", new TypedQueryFactory(Invoiceterm.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceterm.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceterm lhs = (Invoiceterm) o1;
                final Invoiceterm rhs = (Invoiceterm) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoicetermsByCode"
    // ** SELECT e FROM Invoiceterm e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoicetermsByCode", new TypedQueryFactory(Invoiceterm.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoiceterm.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoiceterm lhs = (Invoiceterm) o1;
                final Invoiceterm rhs = (Invoiceterm) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProductfeaturecategorys"
    // ** SELECT e FROM Productfeaturecategory e ORDER BY e.id
    // **
    namedQueries.put("allProductfeaturecategorys", new TypedQueryFactory(Productfeaturecategory.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeaturecategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeaturecategory lhs = (Productfeaturecategory) o1;
                final Productfeaturecategory rhs = (Productfeaturecategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProductfeaturecategorysByCode"
    // ** SELECT e FROM Productfeaturecategory e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProductfeaturecategorysByCode", new TypedQueryFactory(Productfeaturecategory.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Productfeaturecategory.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Productfeaturecategory lhs = (Productfeaturecategory) o1;
                final Productfeaturecategory rhs = (Productfeaturecategory) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allUoms"
    // ** SELECT e FROM Uom e ORDER BY e.id
    // **
    namedQueries.put("allUoms", new TypedQueryFactory(Uom.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Uom.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Uom lhs = (Uom) o1;
                final Uom rhs = (Uom) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findUomsByCode"
    // ** SELECT e FROM Uom e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findUomsByCode", new TypedQueryFactory(Uom.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Uom.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Uom lhs = (Uom) o1;
                final Uom rhs = (Uom) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allSupplierproducts"
    // ** SELECT e FROM Supplierproduct e ORDER BY e.id
    // **
    namedQueries.put("allSupplierproducts", new TypedQueryFactory(Supplierproduct.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Supplierproduct.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Supplierproduct lhs = (Supplierproduct) o1;
                final Supplierproduct rhs = (Supplierproduct) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findSupplierproductsByCode"
    // ** SELECT e FROM Supplierproduct e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findSupplierproductsByCode", new TypedQueryFactory(Supplierproduct.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Supplierproduct.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Supplierproduct lhs = (Supplierproduct) o1;
                final Supplierproduct rhs = (Supplierproduct) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allLots"
    // ** SELECT e FROM Lot e ORDER BY e.id
    // **
    namedQueries.put("allLots", new TypedQueryFactory(Lot.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Lot.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Lot lhs = (Lot) o1;
                final Lot rhs = (Lot) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findLotsByCode"
    // ** SELECT e FROM Lot e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findLotsByCode", new TypedQueryFactory(Lot.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Lot.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Lot lhs = (Lot) o1;
                final Lot rhs = (Lot) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allBudgetstatustypes"
    // ** SELECT e FROM Budgetstatustype e ORDER BY e.id
    // **
    namedQueries.put("allBudgetstatustypes", new TypedQueryFactory(Budgetstatustype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetstatustype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetstatustype lhs = (Budgetstatustype) o1;
                final Budgetstatustype rhs = (Budgetstatustype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findBudgetstatustypesByCode"
    // ** SELECT e FROM Budgetstatustype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findBudgetstatustypesByCode", new TypedQueryFactory(Budgetstatustype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Budgetstatustype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Budgetstatustype lhs = (Budgetstatustype) o1;
                final Budgetstatustype rhs = (Budgetstatustype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allGeneralledgeraccounttypes"
    // ** SELECT e FROM Generalledgeraccounttype e ORDER BY e.id
    // **
    namedQueries.put("allGeneralledgeraccounttypes", new TypedQueryFactory(Generalledgeraccounttype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Generalledgeraccounttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Generalledgeraccounttype lhs = (Generalledgeraccounttype) o1;
                final Generalledgeraccounttype rhs = (Generalledgeraccounttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findGeneralledgeraccounttypesByCode"
    // ** SELECT e FROM Generalledgeraccounttype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findGeneralledgeraccounttypesByCode", new TypedQueryFactory(Generalledgeraccounttype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Generalledgeraccounttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Generalledgeraccounttype lhs = (Generalledgeraccounttype) o1;
                final Generalledgeraccounttype rhs = (Generalledgeraccounttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPayments"
    // ** SELECT e FROM Payment e ORDER BY e.id
    // **
    namedQueries.put("allPayments", new TypedQueryFactory(Payment.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Payment.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Payment lhs = (Payment) o1;
                final Payment rhs = (Payment) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPaymentsByCode"
    // ** SELECT e FROM Payment e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPaymentsByCode", new TypedQueryFactory(Payment.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Payment.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Payment lhs = (Payment) o1;
                final Payment rhs = (Payment) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartytypes"
    // ** SELECT e FROM Partytype e ORDER BY e.id
    // **
    namedQueries.put("allPartytypes", new TypedQueryFactory(Partytype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partytype lhs = (Partytype) o1;
                final Partytype rhs = (Partytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartytypesByCode"
    // ** SELECT e FROM Partytype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartytypesByCode", new TypedQueryFactory(Partytype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partytype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partytype lhs = (Partytype) o1;
                final Partytype rhs = (Partytype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allUomconversions"
    // ** SELECT e FROM Uomconversion e ORDER BY e.id
    // **
    namedQueries.put("allUomconversions", new TypedQueryFactory(Uomconversion.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Uomconversion.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Uomconversion lhs = (Uomconversion) o1;
                final Uomconversion rhs = (Uomconversion) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findUomconversionsByCode"
    // ** SELECT e FROM Uomconversion e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findUomconversionsByCode", new TypedQueryFactory(Uomconversion.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Uomconversion.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Uomconversion lhs = (Uomconversion) o1;
                final Uomconversion rhs = (Uomconversion) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoices"
    // ** SELECT e FROM Invoice e ORDER BY e.id
    // **
    namedQueries.put("allInvoices", new TypedQueryFactory(Invoice.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoice.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoice lhs = (Invoice) o1;
                final Invoice rhs = (Invoice) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoicesByCode"
    // ** SELECT e FROM Invoice e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoicesByCode", new TypedQueryFactory(Invoice.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoice.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoice lhs = (Invoice) o1;
                final Invoice rhs = (Invoice) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPaymentmethodtypes"
    // ** SELECT e FROM Paymentmethodtype e ORDER BY e.id
    // **
    namedQueries.put("allPaymentmethodtypes", new TypedQueryFactory(Paymentmethodtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymentmethodtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymentmethodtype lhs = (Paymentmethodtype) o1;
                final Paymentmethodtype rhs = (Paymentmethodtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPaymentmethodtypesByCode"
    // ** SELECT e FROM Paymentmethodtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPaymentmethodtypesByCode", new TypedQueryFactory(Paymentmethodtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymentmethodtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymentmethodtype lhs = (Paymentmethodtype) o1;
                final Paymentmethodtype rhs = (Paymentmethodtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccounts"
    // ** SELECT e FROM Financialaccount e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccounts", new TypedQueryFactory(Financialaccount.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccount lhs = (Financialaccount) o1;
                final Financialaccount rhs = (Financialaccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccountsByCode"
    // ** SELECT e FROM Financialaccount e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccountsByCode", new TypedQueryFactory(Financialaccount.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccount lhs = (Financialaccount) o1;
                final Financialaccount rhs = (Financialaccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInvoicestatustypes"
    // ** SELECT e FROM Invoicestatustype e ORDER BY e.id
    // **
    namedQueries.put("allInvoicestatustypes", new TypedQueryFactory(Invoicestatustype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoicestatustype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoicestatustype lhs = (Invoicestatustype) o1;
                final Invoicestatustype rhs = (Invoicestatustype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInvoicestatustypesByCode"
    // ** SELECT e FROM Invoicestatustype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInvoicestatustypesByCode", new TypedQueryFactory(Invoicestatustype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Invoicestatustype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Invoicestatustype lhs = (Invoicestatustype) o1;
                final Invoicestatustype rhs = (Invoicestatustype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccounttransactions"
    // ** SELECT e FROM Financialaccounttransaction e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccounttransactions", new TypedQueryFactory(Financialaccounttransaction.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttransaction.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttransaction lhs = (Financialaccounttransaction) o1;
                final Financialaccounttransaction rhs = (Financialaccounttransaction) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccounttransactionsByCode"
    // ** SELECT e FROM Financialaccounttransaction e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccounttransactionsByCode", new TypedQueryFactory(Financialaccounttransaction.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttransaction.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttransaction lhs = (Financialaccounttransaction) o1;
                final Financialaccounttransaction rhs = (Financialaccounttransaction) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFacilitys"
    // ** SELECT e FROM Facility e ORDER BY e.id
    // **
    namedQueries.put("allFacilitys", new TypedQueryFactory(Facility.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Facility.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Facility lhs = (Facility) o1;
                final Facility rhs = (Facility) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFacilitysByCode"
    // ** SELECT e FROM Facility e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFacilitysByCode", new TypedQueryFactory(Facility.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Facility.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Facility lhs = (Facility) o1;
                final Facility rhs = (Facility) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allInventoryitems"
    // ** SELECT e FROM Inventoryitem e ORDER BY e.id
    // **
    namedQueries.put("allInventoryitems", new TypedQueryFactory(Inventoryitem.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitem lhs = (Inventoryitem) o1;
                final Inventoryitem rhs = (Inventoryitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findInventoryitemsByCode"
    // ** SELECT e FROM Inventoryitem e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findInventoryitemsByCode", new TypedQueryFactory(Inventoryitem.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Inventoryitem.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Inventoryitem lhs = (Inventoryitem) o1;
                final Inventoryitem rhs = (Inventoryitem) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPartyrelationshiptypes"
    // ** SELECT e FROM Partyrelationshiptype e ORDER BY e.id
    // **
    namedQueries.put("allPartyrelationshiptypes", new TypedQueryFactory(Partyrelationshiptype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationshiptype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationshiptype lhs = (Partyrelationshiptype) o1;
                final Partyrelationshiptype rhs = (Partyrelationshiptype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPartyrelationshiptypesByCode"
    // ** SELECT e FROM Partyrelationshiptype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPartyrelationshiptypesByCode", new TypedQueryFactory(Partyrelationshiptype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Partyrelationshiptype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Partyrelationshiptype lhs = (Partyrelationshiptype) o1;
                final Partyrelationshiptype rhs = (Partyrelationshiptype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allGeneralledgeraccounts"
    // ** SELECT e FROM Generalledgeraccount e ORDER BY e.id
    // **
    namedQueries.put("allGeneralledgeraccounts", new TypedQueryFactory(Generalledgeraccount.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Generalledgeraccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Generalledgeraccount lhs = (Generalledgeraccount) o1;
                final Generalledgeraccount rhs = (Generalledgeraccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findGeneralledgeraccountsByCode"
    // ** SELECT e FROM Generalledgeraccount e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findGeneralledgeraccountsByCode", new TypedQueryFactory(Generalledgeraccount.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Generalledgeraccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Generalledgeraccount lhs = (Generalledgeraccount) o1;
                final Generalledgeraccount rhs = (Generalledgeraccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allDocumenttypes"
    // ** SELECT e FROM Documenttype e ORDER BY e.id
    // **
    namedQueries.put("allDocumenttypes", new TypedQueryFactory(Documenttype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Documenttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Documenttype lhs = (Documenttype) o1;
                final Documenttype rhs = (Documenttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findDocumenttypesByCode"
    // ** SELECT e FROM Documenttype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findDocumenttypesByCode", new TypedQueryFactory(Documenttype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Documenttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Documenttype lhs = (Documenttype) o1;
                final Documenttype rhs = (Documenttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allTerminationtypes"
    // ** SELECT e FROM Terminationtype e ORDER BY e.id
    // **
    namedQueries.put("allTerminationtypes", new TypedQueryFactory(Terminationtype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Terminationtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Terminationtype lhs = (Terminationtype) o1;
                final Terminationtype rhs = (Terminationtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findTerminationtypesByCode"
    // ** SELECT e FROM Terminationtype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findTerminationtypesByCode", new TypedQueryFactory(Terminationtype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Terminationtype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Terminationtype lhs = (Terminationtype) o1;
                final Terminationtype rhs = (Terminationtype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allProducttypes"
    // ** SELECT e FROM Producttype e ORDER BY e.id
    // **
    namedQueries.put("allProducttypes", new TypedQueryFactory(Producttype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Producttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Producttype lhs = (Producttype) o1;
                final Producttype rhs = (Producttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findProducttypesByCode"
    // ** SELECT e FROM Producttype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findProducttypesByCode", new TypedQueryFactory(Producttype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Producttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Producttype lhs = (Producttype) o1;
                final Producttype rhs = (Producttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allOrganizationgeneralledgeraccounts"
    // ** SELECT e FROM Organizationgeneralledgeraccount e ORDER BY e.id
    // **
    namedQueries.put("allOrganizationgeneralledgeraccounts", new TypedQueryFactory(Organizationgeneralledgeraccount.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organizationgeneralledgeraccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organizationgeneralledgeraccount lhs = (Organizationgeneralledgeraccount) o1;
                final Organizationgeneralledgeraccount rhs = (Organizationgeneralledgeraccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findOrganizationgeneralledgeraccountsByCode"
    // ** SELECT e FROM Organizationgeneralledgeraccount e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findOrganizationgeneralledgeraccountsByCode", new TypedQueryFactory(Organizationgeneralledgeraccount.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Organizationgeneralledgeraccount.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Organizationgeneralledgeraccount lhs = (Organizationgeneralledgeraccount) o1;
                final Organizationgeneralledgeraccount rhs = (Organizationgeneralledgeraccount) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPaymenttypes"
    // ** SELECT e FROM Paymenttype e ORDER BY e.id
    // **
    namedQueries.put("allPaymenttypes", new TypedQueryFactory(Paymenttype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymenttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymenttype lhs = (Paymenttype) o1;
                final Paymenttype rhs = (Paymenttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPaymenttypesByCode"
    // ** SELECT e FROM Paymenttype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPaymenttypesByCode", new TypedQueryFactory(Paymenttype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Paymenttype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Paymenttype lhs = (Paymenttype) o1;
                final Paymenttype rhs = (Paymenttype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allPreferencetypes"
    // ** SELECT e FROM Preferencetype e ORDER BY e.id
    // **
    namedQueries.put("allPreferencetypes", new TypedQueryFactory(Preferencetype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Preferencetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Preferencetype lhs = (Preferencetype) o1;
                final Preferencetype rhs = (Preferencetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findPreferencetypesByCode"
    // ** SELECT e FROM Preferencetype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findPreferencetypesByCode", new TypedQueryFactory(Preferencetype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Preferencetype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Preferencetype lhs = (Preferencetype) o1;
                final Preferencetype rhs = (Preferencetype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    // **
    // ** NamedQuery "allFinancialaccounttransactiontypes"
    // ** SELECT e FROM Financialaccounttransactiontype e ORDER BY e.id
    // **
    namedQueries.put("allFinancialaccounttransactiontypes", new TypedQueryFactory(Financialaccounttransactiontype.class, new ErraiParameter[] { }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttransactiontype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttransactiontype lhs = (Financialaccounttransactiontype) o1;
                final Financialaccounttransactiontype rhs = (Financialaccounttransactiontype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return true;
          }
        };
      }
    });
    // **
    // ** NamedQuery "findFinancialaccounttransactiontypesByCode"
    // ** SELECT e FROM Financialaccounttransactiontype e where e.entityCode = :entityCode ORDER BY e.id
    // **
    namedQueries.put("findFinancialaccounttransactiontypesByCode", new TypedQueryFactory(Financialaccounttransactiontype.class, new ErraiParameter[] { new ErraiParameter("entityCode", 0, String.class) }) {
      protected TypedQuery createQuery(final ErraiEntityManager entityManager) {
        return new ErraiTypedQuery(entityManager, actualResultType, parameters) {
          protected Comparator getComparator() {
            return new Comparator() {
              private final ErraiAttribute e_id_attr = entityManager.getMetamodel().entity(Financialaccounttransactiontype.class).getAttribute("id");
              public int compare(Object o1, Object o2) {
                final Financialaccounttransactiontype lhs = (Financialaccounttransactiontype) o1;
                final Financialaccounttransactiontype rhs = (Financialaccounttransactiontype) o2;
                int result;
                result = Comparisons.nullSafeCompare((Comparable) e_id_attr.get(lhs), (Comparable) e_id_attr.get(rhs));
                if (result != 0) {
                  return + result;
                }
                return 0;
              }
            };
          }
          public boolean matches(JSONObject candidate) {
            return Comparisons.nullSafeEquals(JsonUtil.basicValueFromJson(candidate.get("entityCode"), String.class), getParameterValue("entityCode"));
          }
        };
      }
    });
    return namedQueries;
  }
}